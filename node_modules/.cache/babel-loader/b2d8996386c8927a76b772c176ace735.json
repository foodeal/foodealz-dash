{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\lists\\\\CheckboxList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass CheckboxList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: [0]\n    };\n\n    this.handleToggle = value => () => {\n      const {\n        checked\n      } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [0, 1, 2, 3].map(value => /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: this.handleToggle(value),\n          className: classes.listItem,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: this.state.checked.indexOf(value) !== -1,\n            tabIndex: -1,\n            disableRipple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Line item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"Comments\",\n              children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CheckboxList);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/lists/CheckboxList.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","CheckboxList","Component","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","render","classes","props","map","undefined","listItem","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass CheckboxList extends React.Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {[0, 1, 2, 3].map(value => (\n            <ListItem\n              key={value}\n              role={undefined}\n              dense\n              button\n              onClick={this.handleToggle(value)}\n              className={classes.listItem}\n            >\n              <Checkbox\n                checked={this.state.checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              />\n              <ListItemText primary={`Line item ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Comments\">\n                  <CommentIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxList);\n"]},"metadata":{},"sourceType":"module"}