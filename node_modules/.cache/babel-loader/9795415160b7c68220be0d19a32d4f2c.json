{"ast":null,"code":"'use strict';\n\nvar document = require('global/document');\n\nvar window = require('global/window');\n\nvar fs = require('fs');\n\nvar path = require('path');\n/* eslint-disable max-len */\n\n\nvar vertexShaderBlit = fs.readFileSync(path.join(__dirname, './vertex-shader-blit.glsl'), 'utf-8');\nvar fragmentShaderBlit = fs.readFileSync(path.join(__dirname, './fragment-shader-blit.glsl'), 'utf-8');\n/* eslint-enable max-len */\n\nvar HeatmapTexture = require('./heatmap-texture');\n\nvar HeatmapHeights = require('./heatmap-heights');\n\nvar HeatmapShader = require('./heatmap-shader');\n\nfunction WebGLHeatmap(_arg) {\n  var alphaEnd, alphaRange, alphaStart, error, getColorFun, gradientTexture, image, intensityToAlpha, output, quad, textureGradient, _ref, _ref1;\n\n  _ref = _arg != null ? _arg : {}, this.canvas = _ref.canvas, this.width = _ref.width, this.height = _ref.height, intensityToAlpha = _ref.intensityToAlpha, gradientTexture = _ref.gradientTexture, alphaRange = _ref.alphaRange;\n\n  if (!this.canvas) {\n    this.canvas = document.createElement('canvas');\n  }\n\n  try {\n    this.gl = this.canvas.getContext('experimental-webgl', {\n      depth: false,\n      antialias: false\n    });\n\n    if (this.gl === null) {\n      this.gl = this.canvas.getContext('webgl', {\n        depth: false,\n        antialias: false\n      });\n\n      if (this.gl === null) {\n        throw 'WebGL not supported';\n      }\n    }\n  } catch (_error) {\n    error = _error;\n    throw 'WebGL not supported';\n  }\n\n  if (window.WebGLDebugUtils != null) {\n    console.log('debugging mode');\n    this.gl = WebGLDebugUtils.makeDebugContext(this.gl, function (err, funcName, args) {\n      throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n    });\n  }\n\n  this.gl.enableVertexAttribArray(0);\n  this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\n\n  if (gradientTexture) {\n    textureGradient = this.gradientTexture = new HeatmapTexture(this.gl, {\n      channels: 'rgba'\n    }).bind(0).setSize(2, 2).nearest().clampToEdge();\n\n    if (typeof gradientTexture === 'string') {\n      image = new window.Image();\n\n      image.onload = function () {\n        return textureGradient.bind().upload(image);\n      };\n\n      image.src = gradientTexture;\n    } else {\n      if (gradientTexture.width > 0 && gradientTexture.height > 0) {\n        textureGradient.upload(gradientTexture);\n      } else {\n        gradientTexture.onload = function () {\n          return textureGradient.upload(gradientTexture);\n        };\n      }\n    }\n\n    getColorFun = 'uniform sampler2D gradientTexture;\\nvec3 getColor(float intensity){\\n    return texture2D(gradientTexture, vec2(intensity, 0.0)).rgb;\\n}';\n  } else {\n    textureGradient = null;\n    getColorFun = 'vec3 getColor(float intensity){\\n    vec3 blue = vec3(0.0, 0.0, 1.0);\\n    vec3 cyan = vec3(0.0, 1.0, 1.0);\\n    vec3 green = vec3(0.0, 1.0, 0.0);\\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\\n    vec3 red = vec3(1.0, 0.0, 0.0);\\n\\n    vec3 color = (\\n        fade(-0.25, 0.25, intensity)*blue +\\n        fade(0.0, 0.5, intensity)*cyan +\\n        fade(0.25, 0.75, intensity)*green +\\n        fade(0.5, 1.0, intensity)*yellow +\\n        smoothstep(0.75, 1.0, intensity)*red\\n    );\\n    return color;\\n}';\n  }\n\n  if (intensityToAlpha == null) {\n    intensityToAlpha = true;\n  }\n\n  if (intensityToAlpha) {\n    _ref1 = alphaRange != null ? alphaRange : [0, 1], alphaStart = _ref1[0], alphaEnd = _ref1[1];\n    output = \"vec4 alphaFun(vec3 color, float intensity){\\n    float alpha = smoothstep(\" + alphaStart.toFixed(8) + \", \" + alphaEnd.toFixed(8) + \", intensity);\\n    return vec4(color*alpha, alpha);\\n}\";\n  } else {\n    output = 'vec4 alphaFun(vec3 color, float intensity){\\n    return vec4(color, 1.0);\\n}';\n  }\n\n  this.shader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + (\"float linstep(float low, float high, float value){\\n    return clamp((value-low)/(high-low), 0.0, 1.0);\\n}\\n\\nfloat fade(float low, float high, float value){\\n    float mid = (low+high)*0.5;\\n    float range = (high-low)*0.5;\\n    float x = 1.0 - clamp(abs(mid-value)/range, 0.0, 1.0);\\n    return smoothstep(0.0, 1.0, x);\\n}\\n\\n\" + getColorFun + \"\\n\" + output + \"\\n\\nvoid main(){\\n    float intensity = smoothstep(0.0, 1.0, texture2D(source, texcoord).r);\\n    vec3 color = getColor(intensity);\\n    gl_FragColor = alphaFun(color, intensity);\\n}\")\n  });\n\n  if (this.width == null) {\n    this.width = this.canvas.offsetWidth || 2;\n  }\n\n  if (this.height == null) {\n    this.height = this.canvas.offsetHeight || 2;\n  }\n\n  this.canvas.width = this.width;\n  this.canvas.height = this.height;\n  this.gl.viewport(0, 0, this.width, this.height);\n  this.quad = this.gl.createBuffer();\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n  quad = new Float32Array([-1, -1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1, 1, 1, 0, 1]);\n  this.gl.bufferData(this.gl.ARRAY_BUFFER, quad, this.gl.STATIC_DRAW);\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n  this.heights = new HeatmapHeights(this, this.gl, this.width, this.height);\n}\n\nWebGLHeatmap.prototype.adjustSize = function () {\n  var canvasHeight, canvasWidth;\n  canvasWidth = this.canvas.offsetWidth || 2;\n  canvasHeight = this.canvas.offsetHeight || 2;\n\n  if (this.width !== canvasWidth || this.height !== canvasHeight) {\n    this.gl.viewport(0, 0, canvasWidth, canvasHeight);\n    this.canvas.width = canvasWidth;\n    this.canvas.height = canvasHeight;\n    this.width = canvasWidth;\n    this.height = canvasHeight;\n    return this.heights.resize(this.width, this.height);\n  }\n};\n\nWebGLHeatmap.prototype.display = function () {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.heights.nodeFront.bind(0);\n\n  if (this.gradientTexture) {\n    this.gradientTexture.bind(1);\n  }\n\n  this.shader.use().int('source', 0).int('gradientTexture', 1);\n  return this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n};\n\nWebGLHeatmap.prototype.update = function () {\n  return this.heights.update();\n};\n\nWebGLHeatmap.prototype.clear = function () {\n  return this.heights.clear();\n};\n\nWebGLHeatmap.prototype.clamp = function (min, max) {\n  if (min == null) {\n    min = 0;\n  }\n\n  if (max == null) {\n    max = 1;\n  }\n\n  return this.heights.clamp(min, max);\n};\n\nWebGLHeatmap.prototype.multiply = function (value) {\n  if (value == null) {\n    value = 0.95;\n  }\n\n  return this.heights.multiply(value);\n};\n\nWebGLHeatmap.prototype.blur = function () {\n  return this.heights.blur();\n};\n\nWebGLHeatmap.prototype.addPoint = function (x, y, size, intensity) {\n  return this.heights.addPoint(x, y, size, intensity);\n};\n\nWebGLHeatmap.prototype.addPoints = function (items) {\n  var item, _i, _len, _results;\n\n  _results = [];\n\n  for (_i = 0, _len = items.length; _i < _len; _i++) {\n    item = items[_i];\n\n    _results.push(this.addPoint(item.x, item.y, item.size, item.intensity));\n  }\n\n  return _results;\n};\n\nmodule.exports = WebGLHeatmap;","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/node_modules/webgl-heatmap/webgl-heatmap.js"],"names":["document","require","window","fs","path","vertexShaderBlit","readFileSync","join","__dirname","fragmentShaderBlit","HeatmapTexture","HeatmapHeights","HeatmapShader","WebGLHeatmap","_arg","alphaEnd","alphaRange","alphaStart","error","getColorFun","gradientTexture","image","intensityToAlpha","output","quad","textureGradient","_ref","_ref1","canvas","width","height","createElement","gl","getContext","depth","antialias","_error","WebGLDebugUtils","console","log","makeDebugContext","err","funcName","args","glEnumToString","enableVertexAttribArray","blendFunc","ONE","channels","bind","setSize","nearest","clampToEdge","Image","onload","upload","src","toFixed","shader","vertex","fragment","offsetWidth","offsetHeight","viewport","createBuffer","bindBuffer","ARRAY_BUFFER","Float32Array","bufferData","STATIC_DRAW","heights","prototype","adjustSize","canvasHeight","canvasWidth","resize","display","vertexAttribPointer","FLOAT","nodeFront","use","int","drawArrays","TRIANGLES","update","clear","clamp","min","max","multiply","value","blur","addPoint","x","y","size","intensity","addPoints","items","item","_i","_len","_results","length","push","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar document = require('global/document');\nvar window = require('global/window');\nvar fs = require('fs');\nvar path = require('path');\n/* eslint-disable max-len */\nvar vertexShaderBlit = fs.readFileSync(path.join(__dirname, './vertex-shader-blit.glsl'), 'utf-8');\nvar fragmentShaderBlit = fs.readFileSync(path.join(__dirname, './fragment-shader-blit.glsl'), 'utf-8');\n/* eslint-enable max-len */\nvar HeatmapTexture = require('./heatmap-texture');\nvar HeatmapHeights = require('./heatmap-heights');\nvar HeatmapShader = require('./heatmap-shader');\n\nfunction WebGLHeatmap(_arg) {\n  var alphaEnd, alphaRange, alphaStart, error, getColorFun, gradientTexture, image, intensityToAlpha, output, quad, textureGradient, _ref, _ref1;\n  _ref = _arg != null ? _arg : {}, this.canvas = _ref.canvas, this.width = _ref.width, this.height = _ref.height, intensityToAlpha = _ref.intensityToAlpha, gradientTexture = _ref.gradientTexture, alphaRange = _ref.alphaRange;\n  if (!this.canvas) {\n    this.canvas = document.createElement('canvas');\n  }\n  try {\n    this.gl = this.canvas.getContext('experimental-webgl', {\n      depth: false,\n      antialias: false\n    });\n    if (this.gl === null) {\n      this.gl = this.canvas.getContext('webgl', {\n        depth: false,\n        antialias: false\n      });\n      if (this.gl === null) {\n        throw 'WebGL not supported';\n      }\n    }\n  } catch (_error) {\n    error = _error;\n    throw 'WebGL not supported';\n  }\n  if (window.WebGLDebugUtils != null) {\n    console.log('debugging mode');\n    this.gl = WebGLDebugUtils.makeDebugContext(this.gl, function(err, funcName, args) {\n      throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n    });\n  }\n  this.gl.enableVertexAttribArray(0);\n  this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\n  if (gradientTexture) {\n    textureGradient = this.gradientTexture = new HeatmapTexture(this.gl, {\n      channels: 'rgba'\n    }).bind(0).setSize(2, 2).nearest().clampToEdge();\n    if (typeof gradientTexture === 'string') {\n      image = new window.Image();\n      image.onload = function() {\n        return textureGradient.bind().upload(image);\n      };\n      image.src = gradientTexture;\n    } else {\n      if (gradientTexture.width > 0 && gradientTexture.height > 0) {\n        textureGradient.upload(gradientTexture);\n      } else {\n        gradientTexture.onload = function() {\n          return textureGradient.upload(gradientTexture);\n        };\n      }\n    }\n    getColorFun = 'uniform sampler2D gradientTexture;\\nvec3 getColor(float intensity){\\n    return texture2D(gradientTexture, vec2(intensity, 0.0)).rgb;\\n}';\n  } else {\n    textureGradient = null;\n    getColorFun = 'vec3 getColor(float intensity){\\n    vec3 blue = vec3(0.0, 0.0, 1.0);\\n    vec3 cyan = vec3(0.0, 1.0, 1.0);\\n    vec3 green = vec3(0.0, 1.0, 0.0);\\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\\n    vec3 red = vec3(1.0, 0.0, 0.0);\\n\\n    vec3 color = (\\n        fade(-0.25, 0.25, intensity)*blue +\\n        fade(0.0, 0.5, intensity)*cyan +\\n        fade(0.25, 0.75, intensity)*green +\\n        fade(0.5, 1.0, intensity)*yellow +\\n        smoothstep(0.75, 1.0, intensity)*red\\n    );\\n    return color;\\n}';\n  }\n  if (intensityToAlpha == null) {\n    intensityToAlpha = true;\n  }\n  if (intensityToAlpha) {\n    _ref1 = alphaRange != null ? alphaRange : [0, 1], alphaStart = _ref1[0], alphaEnd = _ref1[1];\n    output = \"vec4 alphaFun(vec3 color, float intensity){\\n    float alpha = smoothstep(\" + (alphaStart.toFixed(8)) + \", \" + (alphaEnd.toFixed(8)) + \", intensity);\\n    return vec4(color*alpha, alpha);\\n}\";\n  } else {\n    output = 'vec4 alphaFun(vec3 color, float intensity){\\n    return vec4(color, 1.0);\\n}';\n  }\n  this.shader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + (\"float linstep(float low, float high, float value){\\n    return clamp((value-low)/(high-low), 0.0, 1.0);\\n}\\n\\nfloat fade(float low, float high, float value){\\n    float mid = (low+high)*0.5;\\n    float range = (high-low)*0.5;\\n    float x = 1.0 - clamp(abs(mid-value)/range, 0.0, 1.0);\\n    return smoothstep(0.0, 1.0, x);\\n}\\n\\n\" + getColorFun + \"\\n\" + output + \"\\n\\nvoid main(){\\n    float intensity = smoothstep(0.0, 1.0, texture2D(source, texcoord).r);\\n    vec3 color = getColor(intensity);\\n    gl_FragColor = alphaFun(color, intensity);\\n}\")\n  });\n  if (this.width == null) {\n    this.width = this.canvas.offsetWidth || 2;\n  }\n  if (this.height == null) {\n    this.height = this.canvas.offsetHeight || 2;\n  }\n  this.canvas.width = this.width;\n  this.canvas.height = this.height;\n  this.gl.viewport(0, 0, this.width, this.height);\n  this.quad = this.gl.createBuffer();\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n  quad = new Float32Array([-1, -1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1, 1, 1, 0, 1]);\n  this.gl.bufferData(this.gl.ARRAY_BUFFER, quad, this.gl.STATIC_DRAW);\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n  this.heights = new HeatmapHeights(this, this.gl, this.width, this.height);\n}\n\nWebGLHeatmap.prototype.adjustSize = function() {\n  var canvasHeight, canvasWidth;\n  canvasWidth = this.canvas.offsetWidth || 2;\n  canvasHeight = this.canvas.offsetHeight || 2;\n  if (this.width !== canvasWidth || this.height !== canvasHeight) {\n    this.gl.viewport(0, 0, canvasWidth, canvasHeight);\n    this.canvas.width = canvasWidth;\n    this.canvas.height = canvasHeight;\n    this.width = canvasWidth;\n    this.height = canvasHeight;\n    return this.heights.resize(this.width, this.height);\n  }\n};\n\nWebGLHeatmap.prototype.display = function() {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.heights.nodeFront.bind(0);\n  if (this.gradientTexture) {\n    this.gradientTexture.bind(1);\n  }\n  this.shader.use().int('source', 0).int('gradientTexture', 1);\n  return this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n};\n\nWebGLHeatmap.prototype.update = function() {\n  return this.heights.update();\n};\n\nWebGLHeatmap.prototype.clear = function() {\n  return this.heights.clear();\n};\n\nWebGLHeatmap.prototype.clamp = function(min, max) {\n  if (min == null) {\n    min = 0;\n  }\n  if (max == null) {\n    max = 1;\n  }\n  return this.heights.clamp(min, max);\n};\n\nWebGLHeatmap.prototype.multiply = function(value) {\n  if (value == null) {\n    value = 0.95;\n  }\n  return this.heights.multiply(value);\n};\n\nWebGLHeatmap.prototype.blur = function() {\n  return this.heights.blur();\n};\n\nWebGLHeatmap.prototype.addPoint = function(x, y, size, intensity) {\n  return this.heights.addPoint(x, y, size, intensity);\n};\n\nWebGLHeatmap.prototype.addPoints = function(items) {\n  var item, _i, _len, _results;\n  _results = [];\n  for (_i = 0, _len = items.length; _i < _len; _i++) {\n    item = items[_i];\n    _results.push(this.addPoint(item.x, item.y, item.size, item.intensity));\n  }\n  return _results;\n};\n\nmodule.exports = WebGLHeatmap;\n"]},"metadata":{},"sourceType":"script"}