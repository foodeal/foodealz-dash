{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\testCSV\\\\TestCSV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { parse } from \"papaparse\";\nimport Table from '@material-ui/core/Table';\nimport axios from 'axios';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination'; // import {csv} from \"d3\";\n\nconst TestCSV = () => {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = React.useState({\n    error: '',\n    data: [],\n    error: null\n  });\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n\n  const addArray = () => {\n    axios.post(`http://192.168.100.194:5000/api/entreroffres/registerMulti`, {\n      nom: data.data[1],\n      partner_id: data.data[2] //   description: partnerdata.description,\n      //   address: partnerdata.address,\n      //   url: partnerdata.url,\n      //   phone: parseInt(partnerdata.phone),\n      //   latitude: parseFloat(partnerdata.latitude),\n      //   longitude: parseFloat(partnerdata.longitude),\n      //   type: data.typePar,\n      //   commission_rate: parseFloat(data.commission_ratePar),\n      //   logourl: partnerdata.logourl,\n      //   image: partnerdata.image,\n      //   discount: data.discountPar\n\n    }).then(res => {\n      console.log(\"add done\");\n    }).catch(error => {\n      console.log(\" problem in posting \" + error);\n    });\n  };\n\n  const onDrop = e => {\n    e.preventDefault();\n    console.log(e.dataTransfer.files);\n    Array.from(e.dataTransfer.files).filter(files => files.type === \"application/vnd.ms-excel\").forEach(async file => {\n      const text = await file.text();\n      const donner = parse(text);\n      let arrayy = [];\n\n      for (let i = 1; i < donner.data.length; i++) {\n        arrayy.push(donner.data[i]);\n      }\n\n      console.log(\"les data sont\", arrayy);\n      setData({ ...data,\n        data: arrayy\n      });\n      await localStorage.setItem('result', donner.data);\n    });\n  };\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 400,\n      marginTop: 20\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: \" Import offers from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"#008037\",\n        marginLeft: \"20px\"\n      },\n      onDragOver: e => {\n        e.preventDefault();\n      },\n      onDrop: e => {\n        onDrop(e);\n        console.log(\"data est :\", data.data);\n      },\n      onClick: () => {\n        addArray();\n      },\n      children: \" import file CSV \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"paper\", {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"partner id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.data.map(item => {\n                return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: item[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[2]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestCSV, \"PnJd9PfQediG0ILGrwJv0O1B1ww=\", true);\n\n_c = TestCSV;\nexport default TestCSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCSV\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/testCSV/TestCSV.js"],"names":["React","useState","useEffect","Button","parse","Table","axios","TableBody","TableCell","TableHead","withStyles","makeStyles","TableRow","Paper","TableContainer","TablePagination","TestCSV","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","error","StyledTableCell","theme","head","backgroundColor","palette","common","white","color","black","body","fontSize","StyledTableRow","root","action","hover","addArray","post","nom","partner_id","then","res","console","log","catch","onDrop","e","preventDefault","dataTransfer","files","Array","from","filter","type","forEach","file","text","donner","arrayy","i","length","push","localStorage","setItem","useStyles","table","minWidth","marginTop","classes","marginLeft","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { parse } from \"papaparse\";\r\nimport Table from '@material-ui/core/Table';\r\nimport axios from 'axios';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n// import {csv} from \"d3\";\r\nconst TestCSV = () => {\r\n\r\n    \r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const [data, setData] = React.useState({\r\n        error: '',\r\n        data: [],\r\n        error: null,\r\n\r\n    });\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: theme.palette.common.white,\r\n            color: theme.palette.common.black,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n\r\n    const addArray = () => {\r\n        axios.post(`http://192.168.100.194:5000/api/entreroffres/registerMulti`, {\r\n          nom: data.data[1],\r\n          partner_id: data.data[2],\r\n          \r\n        //   description: partnerdata.description,\r\n        //   address: partnerdata.address,\r\n        //   url: partnerdata.url,\r\n        //   phone: parseInt(partnerdata.phone),\r\n        //   latitude: parseFloat(partnerdata.latitude),\r\n        //   longitude: parseFloat(partnerdata.longitude),\r\n        //   type: data.typePar,\r\n        //   commission_rate: parseFloat(data.commission_ratePar),\r\n        //   logourl: partnerdata.logourl,\r\n        //   image: partnerdata.image,\r\n        //   discount: data.discountPar\r\n        })\r\n          .then((res) => {\r\n            console.log(\"add done\");\r\n          })\r\n          .catch(error => {\r\n            console.log(\" problem in posting \" + error)\r\n    \r\n          });\r\n    \r\n      }\r\n    const onDrop = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.dataTransfer.files);\r\n        Array.from(e.dataTransfer.files).filter(\r\n            (files) => files.type === \"application/vnd.ms-excel\"\r\n        ).forEach(async (file) => {\r\n            const text = await file.text();\r\n            const donner = parse(text)\r\n            let arrayy = []\r\n            for (let i = 1; i < donner.data.length; i++) {\r\n               arrayy.push(donner.data[i])\r\n            }\r\n            console.log(\"les data sont\", arrayy);\r\n            setData({\r\n                ...data,\r\n                data: arrayy,\r\n            })\r\n            await localStorage.setItem('result',donner.data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 400,\r\n            marginTop: 20,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginLeft: \"20px\" }} > Import offers from CSV</h3>\r\n            <Button\r\n                style={{ backgroundColor: \"#008037\", marginLeft: \"20px\" }}\r\n\r\n\r\n                onDragOver={(e) => {\r\n                    e.preventDefault();\r\n\r\n                }}\r\n                onDrop={(e) => { onDrop(e); console.log(\"data est :\",data.data)\r\n                }}\r\n                onClick={() =>{addArray()}}\r\n\r\n\r\n            > import file CSV </Button>\r\n            <div>\r\n                <paper>\r\n                    <TableContainer>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>id</StyledTableCell>\r\n                                    <StyledTableCell>nom</StyledTableCell>\r\n                                    <StyledTableCell>partner id</StyledTableCell>\r\n                                    {/* <StyledTableCell>PriceBefore</StyledTableCell>\r\n                                    <StyledTableCell>PriceAfter</StyledTableCell>\r\n                                    <StyledTableCell>discount</StyledTableCell>\r\n                                    <StyledTableCell>description</StyledTableCell>\r\n                                    <StyledTableCell>restaurant_id</StyledTableCell> */}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {data.data.map((item) => {\r\n                                    return (\r\n                                        <StyledTableRow hover role=\"checkbox\">\r\n                                            <StyledTableCell >\r\n                                                {item[0]}\r\n\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[1]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[2]}\r\n                                            </StyledTableCell >\r\n                                            {/* <StyledTableCell align=\"right\">\r\n                                                {item[3]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[4]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[5]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[6]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[7]}\r\n                                            </StyledTableCell > */}\r\n\r\n                                        </StyledTableRow>\r\n                                    )\r\n                                })\r\n\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {/* <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={result.data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />  */}\r\n                </paper>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default TestCSV;\r\n"]},"metadata":{},"sourceType":"module"}