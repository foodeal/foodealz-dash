{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\snackbars\\\\CustomizedSnackbars.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const {\n    classes,\n    className,\n    message,\n    onClose,\n    variant,\n    ...other\n  } = props;\n  const Icon = variantIcon[variant];\n  return /*#__PURE__*/_jsxDEV(SnackbarContent, {\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: classNames(classes.icon, classes.iconVariant)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this),\n    action: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)],\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MySnackbarContent;\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n});\n\nclass CustomizedSnackbars extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: classes.margin,\n        onClick: this.handleClick,\n        children: \"Open success snackbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper, {\n          onClose: this.handleClose,\n          variant: \"success\",\n          message: \"This is a success message!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper, {\n        variant: \"error\",\n        className: classes.margin,\n        message: \"This is an error message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper, {\n        variant: \"warning\",\n        className: classes.margin,\n        message: \"This is a warning message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper, {\n        variant: \"info\",\n        className: classes.margin,\n        message: \"This is an information message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySnackbarContentWrapper, {\n        variant: \"success\",\n        className: classes.margin,\n        message: \"This is a success message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCustomizedSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles2)(CustomizedSnackbars);\n\nvar _c;\n\n$RefreshReg$(_c, \"MySnackbarContent\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/snackbars/CustomizedSnackbars.js"],"names":["React","PropTypes","classNames","Button","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","green","amber","IconButton","Snackbar","SnackbarContent","WarningIcon","withStyles","variantIcon","success","warning","error","info","styles1","theme","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContent","props","classes","className","onClose","variant","other","Icon","close","propTypes","object","isRequired","string","node","func","oneOf","MySnackbarContentWrapper","styles2","margin","CustomizedSnackbars","Component","state","open","handleClick","setState","handleClose","event","reason","render","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass CustomizedSnackbars extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Button className={classes.margin} onClick={this.handleClick}>\n          Open success snackbar\n        </Button>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.handleClose}\n            variant=\"success\"\n            message=\"This is a success message!\"\n          />\n        </Snackbar>\n        <MySnackbarContentWrapper\n          variant=\"error\"\n          className={classes.margin}\n          message=\"This is an error message!\"\n        />\n        <MySnackbarContentWrapper\n          variant=\"warning\"\n          className={classes.margin}\n          message=\"This is a warning message!\"\n        />\n        <MySnackbarContentWrapper\n          variant=\"info\"\n          className={classes.margin}\n          message=\"This is an information message!\"\n        />\n        <MySnackbarContentWrapper\n          variant=\"success\"\n          className={classes.margin}\n          message=\"This is a success message!\"\n        />\n      </div>\n    );\n  }\n}\n\nCustomizedSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles2)(CustomizedSnackbars);\n"]},"metadata":{},"sourceType":"module"}