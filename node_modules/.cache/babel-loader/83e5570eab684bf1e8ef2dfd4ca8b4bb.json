{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\dialogs\\\\ConfirmationDialog.js\";\n\n/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nclass ConfirmationDialogRaw extends React.Component {\n  constructor(props) {\n    super();\n    this.radioGroupRef = null;\n    this.state = {};\n\n    this.handleEntering = () => {\n      this.radioGroupRef.focus();\n    };\n\n    this.handleCancel = () => {\n      this.props.onClose(this.props.value);\n    };\n\n    this.handleOk = () => {\n      this.props.onClose(this.state.value);\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.state.value = props.value;\n  }\n\n  // TODO\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      });\n    }\n  }\n\n  render() {\n    const {\n      value,\n      ...other\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      maxWidth: \"xs\",\n      onEntering: this.handleEntering,\n      \"aria-labelledby\": \"confirmation-dialog-title\",\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"confirmation-dialog-title\",\n        children: \"Phone Ringtone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          ref: ref => {\n            this.radioGroupRef = ref;\n          },\n          \"aria-label\": \"Ringtone\",\n          name: \"ringtone\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          children: options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 70\n            }, this),\n            label: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleCancel,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleOk,\n          color: \"primary\",\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func,\n  value: PropTypes.string\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  }\n});\n\nclass ConfirmationDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.button = null;\n    this.state = {\n      open: false,\n      value: 'Dione'\n    };\n\n    this.handleClickListItem = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = value => {\n      this.setState({\n        value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          divider: true,\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Interruptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          divider: true,\n          \"aria-haspopup\": \"true\",\n          \"aria-controls\": \"ringtone-menu\",\n          \"aria-label\": \"Phone ringtone\",\n          onClick: this.handleClickListItem,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Phone ringtone\",\n            secondary: this.state.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          divider: true,\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Default notification ringtone\",\n            secondary: \"Tethys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n          classes: {\n            paper: classes.paper\n          },\n          open: this.state.open,\n          onClose: this.handleClose,\n          value: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nConfirmationDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ConfirmationDialog);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/dialogs/ConfirmationDialog.js"],"names":["React","PropTypes","withStyles","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","options","ConfirmationDialogRaw","Component","constructor","props","radioGroupRef","state","handleEntering","focus","handleCancel","onClose","value","handleOk","handleChange","event","setState","componentWillReceiveProps","nextProps","render","other","ref","map","option","propTypes","func","string","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","button","open","handleClickListItem","handleClose","classes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nclass ConfirmationDialogRaw extends React.Component {\n  radioGroupRef = null;\n\n  constructor(props) {\n    super();\n    this.state.value = props.value;\n  }\n\n  state = {};\n\n  // TODO\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  handleCancel = () => {\n    this.props.onClose(this.props.value);\n  };\n\n  handleOk = () => {\n    this.props.onClose(this.state.value);\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { value, ...other } = this.props;\n\n    return (\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        onEntering={this.handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Ringtone\"\n            name=\"ringtone\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            {options.map(option => (\n              <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOk} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func,\n  value: PropTypes.string,\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435,\n  },\n});\n\nclass ConfirmationDialog extends React.Component {\n  button = null;\n\n  state = {\n    open: false,\n    value: 'Dione',\n  };\n\n  handleClickListItem = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = value => {\n    this.setState({ value, open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <List>\n          <ListItem button divider disabled>\n            <ListItemText primary=\"Interruptions\" />\n          </ListItem>\n          <ListItem\n            button\n            divider\n            aria-haspopup=\"true\"\n            aria-controls=\"ringtone-menu\"\n            aria-label=\"Phone ringtone\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText primary=\"Phone ringtone\" secondary={this.state.value} />\n          </ListItem>\n          <ListItem button divider disabled>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n          <ConfirmationDialogRaw\n            classes={{\n              paper: classes.paper,\n            }}\n            open={this.state.open}\n            onClose={this.handleClose}\n            value={this.state.value}\n          />\n        </List>\n      </div>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n"]},"metadata":{},"sourceType":"module"}