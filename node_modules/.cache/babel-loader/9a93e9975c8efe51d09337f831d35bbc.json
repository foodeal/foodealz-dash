{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\Deals\\\\DealsCSV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { parse } from \"papaparse\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination'; // import {csv} from \"d3\";\n\nconst TestCSV = () => {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = React.useState({\n    error: '',\n    data: [],\n    result: [],\n    error: null\n  });\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n\n  const onDrop = e => {\n    e.preventDefault();\n    console.log(e.dataTransfer.files);\n    Array.from(e.dataTransfer.files).filter(files => files.type === \"application/vnd.ms-excel\").forEach(async file => {\n      const text = await file.text();\n      const donner = parse(text);\n      let arrayy = [];\n      let postdata = [];\n\n      for (let i = 1; i < donner.data.length; i++) {\n        arrayy.push(donner.data[i]);\n        const postarry = {\n          \"image url\": donner.data[i][1],\n          \"discount\": donner.data[i][2],\n          \"PriceAfterDiscount\": donner.data[i][3],\n          \"PriceBeforeDiscount\": donner.data[i][4],\n          \"description\": donner.data[i][5],\n          \"deal description\": donner.data[i][6],\n          \"starting date\": donner.data[i][7],\n          \"expired date\": donner.data[i][8],\n          \"restaurant id\": donner.data[i][9]\n        };\n        postdata.push(postarry);\n      }\n\n      console.log(\"les data sont\", arrayy);\n      setData({ ...data,\n        data: arrayy,\n        result: postdata\n      });\n      await localStorage.setItem('result', donner.data);\n    });\n  };\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 400,\n      marginTop: 20\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: \" Import offers from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"#008037\",\n        marginLeft: \"20px\"\n      },\n      onDragOver: e => {\n        e.preventDefault();\n      },\n      onDrop: e => {\n        onDrop(e);\n        console.log(\"data est :\", data.data);\n      },\n      children: \" import file CSV \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"paper\", {\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \" dealId\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"image url\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"discount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"PriceAfterDiscount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"PriceBeforeDiscount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"deal description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"starting date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"expired date \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"restaurant id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(item => {\n                return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: item[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[2]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[3]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[4]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[5]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[6]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[7]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[8]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item[9]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 100],\n          component: \"div\",\n          count: data.data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestCSV, \"tdMz328J7fLKa0zHqaX9aOdNWRc=\", true);\n\n_c = TestCSV;\nexport default TestCSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCSV\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Deals/DealsCSV.js"],"names":["React","useState","useEffect","Button","parse","Table","TableBody","TableCell","TableHead","withStyles","makeStyles","TableRow","Paper","TableContainer","TablePagination","TestCSV","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","error","result","StyledTableCell","theme","head","backgroundColor","palette","common","white","color","black","body","fontSize","StyledTableRow","root","action","hover","onDrop","e","preventDefault","console","log","dataTransfer","files","Array","from","filter","type","forEach","file","text","donner","arrayy","postdata","i","length","push","postarry","localStorage","setItem","useStyles","table","minWidth","marginTop","classes","marginLeft","slice","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { parse } from \"papaparse\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n// import {csv} from \"d3\";\r\nconst TestCSV = () => {\r\n\r\n    \r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const [data, setData] = React.useState({\r\n        error: '',\r\n        data: [],\r\n        result: [],\r\n        error: null,\r\n\r\n    });\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: theme.palette.common.white,\r\n            color: theme.palette.common.black,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n\r\n    const onDrop = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.dataTransfer.files);\r\n        Array.from(e.dataTransfer.files).filter(\r\n            (files) => files.type === \"application/vnd.ms-excel\"\r\n        ).forEach(async (file) => {\r\n            const text = await file.text();\r\n            const donner = parse(text)\r\n            let arrayy = []\r\n            let postdata=[]\r\n            for (let i = 1; i < donner.data.length; i++) {\r\n               arrayy.push(donner.data[i])\r\n               const postarry= {\"image url\": donner.data[i][1],\"discount\":donner.data[i][2],\"PriceAfterDiscount\":donner.data[i][3],\"PriceBeforeDiscount\":donner.data[i][4], \"description\":donner.data[i][5],\"deal description\":donner.data[i][6], \"starting date\":donner.data[i][7],\"expired date\":donner.data[i][8], \"restaurant id\":donner.data[i][9] }\r\n               postdata.push(postarry)\r\n            }\r\n            console.log(\"les data sont\", arrayy);\r\n            setData({\r\n                ...data,\r\n                data: arrayy,\r\n                result: postdata\r\n            })\r\n            await localStorage.setItem('result',donner.data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 400,\r\n            marginTop: 20,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginLeft: \"20px\" }} > Import offers from CSV</h3>\r\n            <Button\r\n                style={{ backgroundColor: \"#008037\", marginLeft: \"20px\" }}\r\n\r\n\r\n                onDragOver={(e) => {\r\n                    e.preventDefault();\r\n\r\n                }}\r\n                onDrop={(e) => { onDrop(e); console.log(\"data est :\",data.data)\r\n                }}\r\n\r\n\r\n            > import file CSV </Button>\r\n            <div>\r\n                <paper>\r\n                    <TableContainer>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell> dealId</StyledTableCell>\r\n                                    <StyledTableCell>image url</StyledTableCell>\r\n                                    <StyledTableCell>discount</StyledTableCell>\r\n                                    <StyledTableCell>PriceAfterDiscount</StyledTableCell>\r\n                                    <StyledTableCell>PriceBeforeDiscount</StyledTableCell>\r\n                                    <StyledTableCell>description</StyledTableCell>\r\n                                    <StyledTableCell>deal description</StyledTableCell>\r\n                                    <StyledTableCell>starting date</StyledTableCell>\r\n                                    <StyledTableCell>expired date </StyledTableCell>\r\n                                    <StyledTableCell>restaurant id</StyledTableCell>\r\n                                   \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => {\r\n                                    return (\r\n                                        <StyledTableRow hover role=\"checkbox\">\r\n                                            <StyledTableCell >\r\n                                                {item[0]}\r\n\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[1]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[2]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[3]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[4]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[5]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[6]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[7]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[8]}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item[9]}\r\n                                            </StyledTableCell >\r\n                                        \r\n\r\n                                        </StyledTableRow>\r\n                                    )\r\n                                })\r\n\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={data.data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    /> \r\n                </paper>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default TestCSV;\r\n"]},"metadata":{},"sourceType":"module"}