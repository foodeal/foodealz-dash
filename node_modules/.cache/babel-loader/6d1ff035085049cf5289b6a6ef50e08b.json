{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\testCSV\\\\TestCSV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { parse } from \"papaparse\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination'; // import {csv} from \"d3\";\n\nconst TestCSV = () => {\n  _s();\n\n  const [offres, setOffres] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = React.useState({\n    error: '',\n    data: [],\n    error: null\n  });\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 400,\n      marginTop: 20\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: \" Import offers from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"#008037\",\n        marginLeft: \"20px\"\n      },\n      onDragOver: e => {\n        e.preventDefault();\n      },\n      onDrop: e => {\n        let result = \"\";\n        e.preventDefault();\n        console.log(e.dataTransfer.files);\n        Array.from(e.dataTransfer.files).filter(files => files.type === \"application/vnd.ms-excel\").forEach(async file => {\n          const text = await file.text();\n          result = parse(text), console.log(\"le resultat est :\", result.data);\n        });\n      },\n      children: \" import the file \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"paper\", {\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"PriceBefore\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"PriceAfter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"discount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"restaurant_id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: parse(text).data.map((item, id) => {\n                return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.PriceBefore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.PriceAfter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.discount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: item.restaurant_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 100],\n          component: \"div\",\n          count: result.data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestCSV, \"hizfaRA7nhLl7E60el/1TNSSBVQ=\", true);\n\n_c = TestCSV;\nexport default TestCSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCSV\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/testCSV/TestCSV.js"],"names":["React","useState","useEffect","Button","parse","Table","TableBody","TableCell","TableHead","withStyles","makeStyles","TableRow","Paper","TableContainer","TablePagination","TestCSV","offres","setOffres","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","error","StyledTableCell","theme","head","backgroundColor","palette","common","white","color","black","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","marginTop","classes","marginLeft","e","preventDefault","result","console","log","dataTransfer","files","Array","from","filter","type","forEach","file","text","map","item","id","nom","image","PriceBefore","PriceAfter","discount","description","restaurant_id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { parse } from \"papaparse\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n// import {csv} from \"d3\";\r\nconst TestCSV = () => {\r\n\r\n    const [offres, setOffres] = React.useState([]);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const [data, setData] = React.useState({\r\n        error: '',\r\n        data: [],\r\n        error: null,\r\n\r\n    });\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: theme.palette.common.white,\r\n            color: theme.palette.common.black,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 400,\r\n            marginTop: 20,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginLeft: \"20px\" }} > Import offers from CSV</h3>\r\n            <Button\r\n                style={{ backgroundColor: \"#008037\", marginLeft: \"20px\" }}\r\n\r\n\r\n                onDragOver={(e) => {\r\n                    e.preventDefault();\r\n\r\n                }}\r\n                onDrop={(e) => {\r\n                    let result = \"\";\r\n\r\n                    e.preventDefault();\r\n                    console.log(e.dataTransfer.files);\r\n                    Array.from(e.dataTransfer.files).filter(\r\n                        (files) => files.type === \"application/vnd.ms-excel\"\r\n                    ).forEach(async (file) => {\r\n                        const text = await file.text();\r\n                        result = parse(text),\r\n                            console.log(\"le resultat est :\",result.data);\r\n\r\n                    });\r\n                    \r\n                }}\r\n            > import the file </Button>\r\n            <div>\r\n                <paper>\r\n                    <TableContainer>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>id</StyledTableCell>\r\n                                    <StyledTableCell>nom</StyledTableCell>\r\n                                    <StyledTableCell>image</StyledTableCell>\r\n                                    <StyledTableCell>PriceBefore</StyledTableCell>\r\n                                    <StyledTableCell>PriceAfter</StyledTableCell>\r\n                                    <StyledTableCell>discount</StyledTableCell>\r\n                                    <StyledTableCell>description</StyledTableCell>\r\n                                    <StyledTableCell>restaurant_id</StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {parse(text).data.map((item, id) => {\r\n                                    return (\r\n                                        <StyledTableRow hover role=\"checkbox\">\r\n                                            <StyledTableCell >\r\n                                                {item.id}\r\n\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.nom}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.image}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.PriceBefore}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.PriceAfter}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.discount}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.description}\r\n                                            </StyledTableCell >\r\n                                            <StyledTableCell align=\"right\">\r\n                                                {item.restaurant_id}\r\n                                            </StyledTableCell >\r\n\r\n                                        </StyledTableRow>\r\n                                    )\r\n                                })\r\n\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                     <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={result.data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    /> \r\n            </paper>\r\n            </div> \r\n        </div>\r\n\r\n    )\r\n};\r\nexport default TestCSV;\r\n"]},"metadata":{},"sourceType":"module"}