{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar Immutable = require('immutable');\n\nvar window = require('global/window');\n\nvar document = require('global/document');\n\nvar r = require('r-dom');\n\nvar WebGLHeatmap = require('webgl-heatmap');\n\nvar ViewportMercator = require('viewport-mercator-project');\n\nvar viridis = require('scale-color-perceptual/hex/viridis.json');\n\nmodule.exports = createReactClass({\n  displayName: 'HeatmapOverlay',\n  propTypes: {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n    latitude: PropTypes.number.isRequired,\n    zoom: PropTypes.number.isRequired,\n    locations: PropTypes.oneOfType([PropTypes.array, PropTypes.instanceOf(Immutable.List)]),\n    lngLatAccessor: PropTypes.func.isRequired,\n    intensityAccessor: PropTypes.func.isRequired,\n    sizeAccessor: PropTypes.func.isRequired,\n    gradientColors: PropTypes.instanceOf(Immutable.List).isRequired\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      lngLatAccessor: function lngLatAccessor(location) {\n        return [location.longitude, location.latitude];\n      },\n      intensityAccessor: function intensityAccessor(location) {\n        return 1 / 10;\n      },\n      sizeAccessor: function sizeAccessor(location) {\n        return 40;\n      },\n      gradientColors: Immutable.List(viridis)\n    };\n  },\n  _prevGradientColors: null,\n  _gradientTexture: null,\n  componentDidMount: function componentDidMount() {\n    this._update();\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    this._update();\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    // Clean up!\n    this._heatmap = null;\n  },\n\n  /**\n    * Updates `this._gradientTexture` Image if `props.gradientColors`\n    * has changed.\n    * @returns {Image} `this._gradientTexture`.\n    */\n  _getGradientTexture: function _getGradientTexture() {\n    // Only update the texture when the gradient has changed.\n    if (this._prevGradientColors === this.props.gradientColors) {\n      return this._gradientTexture;\n    }\n\n    var canvas = document.createElement('canvas'); // 512, 10 because these are the same dimensions webgl-heatmap uses for its\n    // built in gradient textures.\n\n    var width = 512;\n    var height = 10;\n    canvas.width = String(width);\n    canvas.height = String(height);\n    var ctx = canvas.getContext('2d');\n    var gradient = ctx.createLinearGradient(0, height / 2, width, height / 2);\n    var colors = this.props.gradientColors;\n    colors.forEach(function each(color, index) {\n      var position = index / (colors.size - 1);\n      gradient.addColorStop(position, color);\n    });\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n    var image = new window.Image();\n    image.src = canvas.toDataURL('image/png');\n    return image;\n  },\n  _redraw: function _redraw() {\n    var mercator = ViewportMercator(this.props);\n\n    this._heatmap.clear();\n\n    this._heatmap.adjustSize();\n\n    this.props.locations.forEach(function each(location) {\n      var size = this.props.sizeAccessor(location);\n      var intensity = this.props.intensityAccessor(location);\n      var pixel = mercator.project(this.props.lngLatAccessor(location));\n\n      this._heatmap.addPoint(pixel[0], pixel[1], size, intensity);\n    }, this);\n\n    this._heatmap.update();\n\n    this._heatmap.display();\n  },\n  _update: function _update() {\n    var gradientTexture = this._getGradientTexture();\n\n    if (this._gradientTexture !== gradientTexture) {\n      this._heatmap = new WebGLHeatmap({\n        canvas: this.refs.overlay,\n        intensityToAlpha: true,\n        alphaRange: [0, 0.1],\n        gradientTexture: gradientTexture\n      });\n      this._gradientTexture = gradientTexture;\n    }\n\n    this._redraw();\n\n    this._prevGradientColors = this.props.gradientColors;\n  },\n  render: function render() {\n    var pixelRatio = window.devicePixelRatio || 1;\n    return r.canvas({\n      ref: 'overlay',\n      width: this.props.width * pixelRatio,\n      height: this.props.height * pixelRatio,\n      style: {\n        width: this.props.width + 'px',\n        height: this.props.height + 'px',\n        position: 'absolute',\n        pointerEvents: 'none',\n        left: 0,\n        top: 0\n      }\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/node_modules/react-map-gl-heatmap-overlay/index.js"],"names":["React","require","PropTypes","createReactClass","Immutable","window","document","r","WebGLHeatmap","ViewportMercator","viridis","module","exports","displayName","propTypes","width","number","isRequired","height","longitude","latitude","zoom","locations","oneOfType","array","instanceOf","List","lngLatAccessor","func","intensityAccessor","sizeAccessor","gradientColors","getDefaultProps","location","_prevGradientColors","_gradientTexture","componentDidMount","_update","componentDidUpdate","componentWillUnmount","_heatmap","_getGradientTexture","props","canvas","createElement","String","ctx","getContext","gradient","createLinearGradient","colors","forEach","each","color","index","position","size","addColorStop","fillStyle","fillRect","image","Image","src","toDataURL","_redraw","mercator","clear","adjustSize","intensity","pixel","project","addPoint","update","display","gradientTexture","refs","overlay","intensityToAlpha","alphaRange","render","pixelRatio","devicePixelRatio","ref","style","pointerEvents","left","top"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar createReactClass = require('create-react-class');\nvar Immutable = require('immutable');\nvar window = require('global/window');\nvar document = require('global/document');\nvar r = require('r-dom');\nvar WebGLHeatmap = require('webgl-heatmap');\nvar ViewportMercator = require('viewport-mercator-project');\nvar viridis = require('scale-color-perceptual/hex/viridis.json');\n\nmodule.exports = createReactClass({\n    displayName: 'HeatmapOverlay',\n\n    propTypes: {\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        longitude: PropTypes.number.isRequired,\n        latitude: PropTypes.number.isRequired,\n        zoom: PropTypes.number.isRequired,\n        locations: PropTypes.oneOfType([\n            PropTypes.array,\n            PropTypes.instanceOf(Immutable.List)\n        ]),\n        lngLatAccessor: PropTypes.func.isRequired,\n        intensityAccessor: PropTypes.func.isRequired,\n        sizeAccessor: PropTypes.func.isRequired,\n        gradientColors: PropTypes.instanceOf(Immutable.List).isRequired\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            lngLatAccessor: function lngLatAccessor(location) {\n                return [location.longitude, location.latitude];\n            },\n            intensityAccessor: function intensityAccessor(location) {\n                return 1 / 10;\n            },\n            sizeAccessor: function sizeAccessor(location) {\n                return 40;\n            },\n            gradientColors: Immutable.List(viridis)\n        };\n    },\n\n    _prevGradientColors: null,\n    _gradientTexture: null,\n\n    componentDidMount: function componentDidMount() {\n        this._update();\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n        this._update();\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        // Clean up!\n        this._heatmap = null;\n    },\n\n    /**\n      * Updates `this._gradientTexture` Image if `props.gradientColors`\n      * has changed.\n      * @returns {Image} `this._gradientTexture`.\n      */\n    _getGradientTexture: function _getGradientTexture() {\n        // Only update the texture when the gradient has changed.\n        if (this._prevGradientColors === this.props.gradientColors) {\n            return this._gradientTexture;\n        }\n        var canvas = document.createElement('canvas');\n        // 512, 10 because these are the same dimensions webgl-heatmap uses for its\n        // built in gradient textures.\n        var width = 512;\n        var height = 10;\n        canvas.width = String(width);\n        canvas.height = String(height);\n        var ctx = canvas.getContext('2d');\n        var gradient = ctx.createLinearGradient(0, height / 2, width, height / 2);\n        var colors = this.props.gradientColors;\n        colors.forEach(function each(color, index) {\n            var position = index / (colors.size - 1);\n            gradient.addColorStop(position, color);\n        });\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, width, height);\n        var image = new window.Image();\n        image.src = canvas.toDataURL('image/png');\n        return image;\n    },\n\n    _redraw: function _redraw() {\n        var mercator = ViewportMercator(this.props);\n        this._heatmap.clear();\n        this._heatmap.adjustSize();\n        this.props.locations.forEach(function each(location) {\n            var size = this.props.sizeAccessor(location);\n            var intensity = this.props.intensityAccessor(location);\n            var pixel = mercator.project(this.props.lngLatAccessor(location));\n            this._heatmap.addPoint(pixel[0], pixel[1], size, intensity);\n        }, this);\n        this._heatmap.update();\n        this._heatmap.display();\n    },\n\n    _update: function _update() {\n        var gradientTexture = this._getGradientTexture();\n        if (this._gradientTexture !== gradientTexture) {\n            this._heatmap = new WebGLHeatmap({\n                canvas: this.refs.overlay,\n                intensityToAlpha: true,\n                alphaRange: [0, 0.1],\n                gradientTexture: gradientTexture\n            });\n            this._gradientTexture = gradientTexture;\n        }\n        this._redraw();\n        this._prevGradientColors = this.props.gradientColors;\n    },\n\n    render: function render() {\n        var pixelRatio = window.devicePixelRatio || 1;\n        return r.canvas({\n            ref: 'overlay',\n            width: this.props.width * pixelRatio,\n            height: this.props.height * pixelRatio,\n            style: {\n                width: this.props.width + 'px',\n                height: this.props.height + 'px',\n                position: 'absolute',\n                pointerEvents: 'none',\n                left: 0,\n                top: 0\n            }\n        });\n    }\n});\n"]},"metadata":{},"sourceType":"script"}