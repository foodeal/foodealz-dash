{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\snackbars\\\\ConsecutiveSnackbars.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    width: theme.spacing(1) * 4,\n    height: theme.spacing(1) * 4\n  }\n});\n\nclass ConsecutiveSnackbars extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.queue = [];\n    this.state = {\n      open: false,\n      messageInfo: {}\n    };\n\n    this.handleClick = message => () => {\n      this.queue.push({\n        message,\n        key: new Date().getTime()\n      });\n\n      if (this.state.open) {\n        // immediately begin dismissing current message\n        // to start showing new one\n        this.setState({\n          open: false\n        });\n      } else {\n        this.processQueue();\n      }\n    };\n\n    this.processQueue = () => {\n      if (this.queue.length > 0) {\n        this.setState({\n          messageInfo: this.queue.shift(),\n          open: true\n        });\n      }\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleExited = () => {\n      this.processQueue();\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      message,\n      key\n    } = this.state.messageInfo;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleClick('message a'),\n        children: \"Show message A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleClick('message b'),\n        children: \"Show message B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        onExited: this.handleExited,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          onClick: this.handleClose,\n          children: \"UNDO\"\n        }, \"undo\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ConsecutiveSnackbars);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/snackbars/ConsecutiveSnackbars.js"],"names":["React","PropTypes","withStyles","Button","Snackbar","IconButton","CloseIcon","styles","theme","close","width","spacing","height","ConsecutiveSnackbars","Component","queue","state","open","messageInfo","handleClick","message","push","key","Date","getTime","setState","processQueue","length","shift","handleClose","event","reason","handleExited","render","classes","props","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    width: theme.spacing(1) * 4,\n    height: theme.spacing(1) * 4,\n  },\n});\n\nclass ConsecutiveSnackbars extends React.Component {\n  queue = [];\n\n  state = {\n    open: false,\n    messageInfo: {},\n  };\n\n  handleClick = message => () => {\n    this.queue.push({\n      message,\n      key: new Date().getTime(),\n    });\n\n    if (this.state.open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      this.setState({ open: false });\n    } else {\n      this.processQueue();\n    }\n  };\n\n  processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift(),\n        open: true,\n      });\n    }\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { message, key } = this.state.messageInfo;\n    return (\n      <div>\n        <Button onClick={this.handleClick('message a')}>Show message A</Button>\n        <Button onClick={this.handleClick('message b')}>Show message B</Button>\n        <Snackbar\n          key={key}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{message}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConsecutiveSnackbars);\n"]},"metadata":{},"sourceType":"module"}