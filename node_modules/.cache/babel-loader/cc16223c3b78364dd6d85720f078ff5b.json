{"ast":null,"code":"// // a little function to help us with reordering the result\n// const reorder = (list, startIndex, endIndex) => {\n//   const result = Array.from(list);\n//   const [removed] = result.splice(startIndex, 1);\n//   result.splice(endIndex, 0, removed);\n//   return result;\n// };\n// export default reorder;\n// export const reorderQuoteMap = ({ quoteMap, source, destination }) => {\n//   const current = [...quoteMap[source.droppableId]];\n//   const next = [...quoteMap[destination.droppableId]];\n//   const target = current[source.index];\n//   // moving to same list\n//   if (source.droppableId === destination.droppableId) {\n//     const reordered = reorder(current, source.index, destination.index);\n//     const result = {\n//       ...quoteMap,\n//       [source.droppableId]: reordered\n//     };\n//     return {\n//       quoteMap: result\n//     };\n//   }\n//   // moving to different list\n//   // remove from original\n//   current.splice(source.index, 1);\n//   // insert into next\n//   next.splice(destination.index, 0, target);\n//   const result = {\n//     ...quoteMap,\n//     [source.droppableId]: current,\n//     [destination.droppableId]: next\n//   };\n//   return {\n//     quoteMap: result\n//   };\n// };","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Taskboard/reorder.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// // a little function to help us with reordering the result\n// const reorder = (list, startIndex, endIndex) => {\n//   const result = Array.from(list);\n//   const [removed] = result.splice(startIndex, 1);\n//   result.splice(endIndex, 0, removed);\n\n//   return result;\n// };\n\n// export default reorder;\n\n// export const reorderQuoteMap = ({ quoteMap, source, destination }) => {\n//   const current = [...quoteMap[source.droppableId]];\n//   const next = [...quoteMap[destination.droppableId]];\n//   const target = current[source.index];\n\n//   // moving to same list\n//   if (source.droppableId === destination.droppableId) {\n//     const reordered = reorder(current, source.index, destination.index);\n//     const result = {\n//       ...quoteMap,\n//       [source.droppableId]: reordered\n//     };\n//     return {\n//       quoteMap: result\n//     };\n//   }\n\n//   // moving to different list\n\n//   // remove from original\n//   current.splice(source.index, 1);\n//   // insert into next\n//   next.splice(destination.index, 0, target);\n\n//   const result = {\n//     ...quoteMap,\n//     [source.droppableId]: current,\n//     [destination.droppableId]: next\n//   };\n\n//   return {\n//     quoteMap: result\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}