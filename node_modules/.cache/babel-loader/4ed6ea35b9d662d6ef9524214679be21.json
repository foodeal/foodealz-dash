{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\Maps\\\\UsersMap.js\",\n    _s = $RefreshSig$();\n\n// !!!!!!!!!!!!!!!!!!!!!!Method 1111111111111111111\nimport React, { useState, useEffect } from 'react';\nimport L, { map } from 'leaflet';\n\nconst UsersMap = () => {\n  _s();\n\n  const [mapdata, setMapdata] = React.useState({\n    map: \"\",\n    zoom: 12,\n    userData: [{\n      lat: 33.886917,\n      lng: 9.537499,\n      val: 5\n    }, {\n      lat: 34.886917,\n      lng: 10.537499,\n      val: 2\n    }, {\n      lat: 35.886917,\n      lng: 11.537499,\n      val: 1\n    }, {\n      lat: 36.886917,\n      lng: 12.537499,\n      val: 6\n    }, {\n      lat: 37.886917,\n      lng: 13.537499,\n      val: 3\n    }]\n  });\n\n  const density = () => {\n    mapdata.map = L.map('map').setView([33.886917, 9.537499], 13);\n    L.tileLayer('http://tiles.mapc.org/basemap/{z}/{x}/{y}.png', {\n      attribution: 'Tiles by <a href=\"http://mapc.org\">MAPC</a>, Data by <a href=\"http://mass.gov/mgis\">MassGIS</a>',\n      maxZoom: 17,\n      minZoom: 9\n    }).addTo(map);\n    $.getJSON(\"density of users\", function (data) {\n      const locations = data.features.map(rat => {\n        const location = rat.geometry.coordinates.reverse();\n        location.push(0.5);\n        console.log(\"la location est :\", location);\n        return location;\n      });\n      const heat = L.heatLayer(locations, {\n        radius: 35\n      });\n      map.addLayer(heat);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users Map \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), mapdata.map]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n};\n\n_s(UsersMap, \"HCkLtliaz9B/S4j4caYI2k8I6g8=\");\n\n_c = UsersMap;\nexport default UsersMap; // !!!!!!!!!!!!!!!!!!!!!!Method 22222222222222222222\n// // import React , {useState, useEffect} from 'react';\n// // import h337 from 'heatmap.js';\n// // const  UsersMap =() =>{\n// //   const [data, setData] = React.useState({\n// //     error: '',\n// //     data: [],\n// //     points: [],\n// //     max:0,\n// //     width:840,\n// //     height:400,\n// //     len: 200,\n// //     error: null,\n// //   });\n// //   useEffect(() => {\n// //      const heatmapInstance = h337.create({\n// //        container: domElement\n// //      })\n// //      while (len--) {\n// //       const val = Math.floor(Math.random()*100);\n// //       max = Math.max(max, val);\n// //       const point = {\n// //         x: Math.floor(Math.random()*data.width),\n// //         y: Math.floor(Math.random()*data.height),\n// //         value: val\n// //       };\n// //       points.push(point);\n// //     }\n// //     setData({\n// //       ...data,\n// //           max:max,\n// //           points:points,\n// //     });\n// //     heatmapInstance.setData(data);\n// //   })\n// //   return(\n// // <div >\n// //       <h1>Hello CodeSandbox</h1>\n// //       <h2>Start editing to see some magic happen!</h2>\n// //     </div>\n// //   )\n// //   }\n// // export default UsersMap ;\n// !!!!!!!!!!!!!!!!!!!!!!Method 33333333333333333333\n// import React, { useState , useEffect} from \"react\";\n// import heatmap from 'heatmap.js/build/heatmap';\n// import {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\";\n// const UsersMap = () => {\n//     const [data, setData] = React.useState({\n//         error: '',\n//         data: [],\n//         temp: [],\n//         error: null,\n//         search: null,\n//         array: [],\n//         userData: [\n//           {lat:33.886917 , lng: 9.537499, val: 5},\n//           {lat:34.886917 , lng: 10.537499, val: 2},\n//           {lat:35.886917 , lng: 11.537499, val: 1},\n//           {lat:36.886917 , lng: 12.537499, val: 6},\n//           {lat:37.886917 , lng: 13.537499, val: 3},\n//         ]\n//       });\n//       // const getData = async () => {\n//       //   const url = `https://api.foodealzapi.com/users`;\n//       //   await fetch(url)\n//       //     .then(res => res.json())\n//       //     .then(res => {\n//       //       console.log(\" le resultat est :\",res);\n//       //       setData({\n//       //         ...data,\n//       //         data: res,\n//       //       });\n//       //     })\n//       //     .catch(error => {\n//       //       setData({\n//       //         ...data,\n//       //         error: 'Error Loading content',\n//       //       })\n//       //     })\n//       // };\n//       console.log(\"les users sont :\", data.data);\n//       // useEffect(() => {\n//       //   getData()\n//       // }, [])\n//       const Map = ()  =>{\n//         const [selectedUser, setSelectedUser] = useState(null);\n//             return (\n//             <GoogleMap  defaultZoom={10} defaultCenter={{lat:33.886917 , lng:9.537499 }} >\n//                    heatmap.create({\n//                      maxOpacity: 1,\n//                      radius: 30,\n//                    })\n//                  </GoogleMap>\n//             );\n//         }\n//         const WrappedMap = withScriptjs(withGoogleMap(Map));\n//     return(\n//         <div style={{width: '100vw' , height: '100vh'}}>\n//             <WrappedMap \n//              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=visualization,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`} `} \n//              loadingElement= {<div style={{height: \"100%\"}} />}\n//              containerElement= {<div style={{height: \"100%\"}} />}\n//              mapElement= {<div style={{height: \"100%\"}} />}\n//             />\n//         </div>\n//     )\n// }\n// export default UsersMap;\n// method 4444444444444444\n// import React, { useState , useEffect} from \"react\";\n// import L from \"leaflet-heatmap.js\"\n// const UsersMap = () => {\n//     const [mapdata, setMapdata] = React.useState({\n//         max:8,\n//         userData: [\n//                    {lat:33.886917 , lng: 9.537499, val: 5},\n//                    {lat:34.886917 , lng: 10.537499, val: 2},\n//                    {lat:35.886917 , lng: 11.537499, val: 1},\n//                    {lat:36.886917 , lng: 12.537499, val: 6},\n//                    {lat:37.886917 , lng: 13.537499, val: 3},\n//                  ]\n//        });\n// return (\n//     const baseLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\n//             attribution: 'Tiles by <a href=\"http://mapc.org\">MAPC</a>, Data by <a href=\"http://mass.gov/mgis\">MassGIS</a>',\n//             maxZoom: 18\n//           }\n//     )\n// )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersMap\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Maps/UsersMap.js"],"names":["React","useState","useEffect","L","map","UsersMap","mapdata","setMapdata","zoom","userData","lat","lng","val","density","setView","tileLayer","attribution","maxZoom","minZoom","addTo","$","getJSON","data","locations","features","rat","location","geometry","coordinates","reverse","push","console","log","heat","heatLayer","radius","addLayer"],"mappings":"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","sourcesContent":["// !!!!!!!!!!!!!!!!!!!!!!Method 1111111111111111111\r\nimport React , {useState, useEffect} from 'react';\r\nimport L, { map } from 'leaflet';\r\n\r\n\r\nconst UsersMap = () => {\r\n\r\n    const [mapdata, setMapdata] = React.useState({\r\n       map:\"\",\r\n       zoom:12,\r\n       userData: [\r\n                  {lat:33.886917 , lng: 9.537499, val: 5},\r\n                  {lat:34.886917 , lng: 10.537499, val: 2},\r\n                  {lat:35.886917 , lng: 11.537499, val: 1},\r\n                  {lat:36.886917 , lng: 12.537499, val: 6},\r\n                  {lat:37.886917 , lng: 13.537499, val: 3},\r\n                ]\r\n\r\n      });\r\n      const density =() =>{\r\n        mapdata.map= L.map('map').setView([33.886917, 9.537499],13)\r\n        L.tileLayer('http://tiles.mapc.org/basemap/{z}/{x}/{y}.png',{\r\n            attribution:'Tiles by <a href=\"http://mapc.org\">MAPC</a>, Data by <a href=\"http://mass.gov/mgis\">MassGIS</a>',\r\n            maxZoom:17,\r\n            minZoom:9\r\n        }).addTo(map);\r\n        \r\n        $.getJSON(\"density of users\",function(data) {                         \r\n            const locations= data.features.map((rat) =>{\r\n                const location= rat.geometry.coordinates.reverse();\r\n                location.push(0.5);\r\n                console.log(\"la location est :\", location);\r\n                return location;\r\n\r\n            });\r\n\r\n            const heat = L.heatLayer(locations, {radius: 35});\r\n            map.addLayer(heat);\r\n        });\r\n\r\n\r\n      };\r\n\r\n      return(\r\n          <div>\r\n              <h2>Users Map </h2>\r\n              {mapdata.map}\r\n\r\n\r\n          </div>\r\n        \r\n      )\r\n    \r\n\r\n}\r\nexport default UsersMap;\r\n\r\n\r\n// !!!!!!!!!!!!!!!!!!!!!!Method 22222222222222222222\r\n// // import React , {useState, useEffect} from 'react';\r\n// // import h337 from 'heatmap.js';\r\n\r\n\r\n// // const  UsersMap =() =>{\r\n// //   const [data, setData] = React.useState({\r\n// //     error: '',\r\n// //     data: [],\r\n// //     points: [],\r\n// //     max:0,\r\n// //     width:840,\r\n// //     height:400,\r\n// //     len: 200,\r\n// //     error: null,\r\n    \r\n// //   });\r\n\r\n// //   useEffect(() => {\r\n// //      const heatmapInstance = h337.create({\r\n// //        container: domElement\r\n// //      })\r\n// //      while (len--) {\r\n// //       const val = Math.floor(Math.random()*100);\r\n// //       max = Math.max(max, val);\r\n// //       const point = {\r\n// //         x: Math.floor(Math.random()*data.width),\r\n// //         y: Math.floor(Math.random()*data.height),\r\n// //         value: val\r\n// //       };\r\n// //       points.push(point);\r\n// //     }\r\n// //     setData({\r\n// //       ...data,\r\n// //           max:max,\r\n// //           points:points,\r\n// //     });\r\n// //     heatmapInstance.setData(data);\r\n\r\n// //   })\r\n// //   return(\r\n// // <div >\r\n// //       <h1>Hello CodeSandbox</h1>\r\n// //       <h2>Start editing to see some magic happen!</h2>\r\n// //     </div>\r\n\r\n// //   )\r\n// //   }\r\n \r\n// // export default UsersMap ;\r\n\r\n\r\n\r\n\r\n// !!!!!!!!!!!!!!!!!!!!!!Method 33333333333333333333\r\n\r\n// import React, { useState , useEffect} from \"react\";\r\n\r\n// import heatmap from 'heatmap.js/build/heatmap';\r\n// import {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\";\r\n\r\n\r\n\r\n\r\n// const UsersMap = () => {\r\n\r\n//     const [data, setData] = React.useState({\r\n\r\n//         error: '',\r\n//         data: [],\r\n//         temp: [],\r\n//         error: null,\r\n//         search: null,\r\n//         array: [],\r\n//         userData: [\r\n//           {lat:33.886917 , lng: 9.537499, val: 5},\r\n//           {lat:34.886917 , lng: 10.537499, val: 2},\r\n//           {lat:35.886917 , lng: 11.537499, val: 1},\r\n//           {lat:36.886917 , lng: 12.537499, val: 6},\r\n//           {lat:37.886917 , lng: 13.537499, val: 3},\r\n//         ]\r\n\r\n\r\n//       });\r\n//       // const getData = async () => {\r\n//       //   const url = `https://api.foodealzapi.com/users`;\r\n//       //   await fetch(url)\r\n//       //     .then(res => res.json())\r\n//       //     .then(res => {\r\n//       //       console.log(\" le resultat est :\",res);\r\n\r\n//       //       setData({\r\n//       //         ...data,\r\n//       //         data: res,\r\n              \r\n//       //       });\r\n\r\n//       //     })\r\n\r\n//       //     .catch(error => {\r\n//       //       setData({\r\n//       //         ...data,\r\n//       //         error: 'Error Loading content',\r\n//       //       })\r\n//       //     })\r\n//       // };\r\n\r\n//       console.log(\"les users sont :\", data.data);\r\n//       // useEffect(() => {\r\n//       //   getData()\r\n//       // }, [])\r\n\r\n\r\n\r\n\r\n//       const Map = ()  =>{\r\n\r\n//         const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n//             return (\r\n//             <GoogleMap  defaultZoom={10} defaultCenter={{lat:33.886917 , lng:9.537499 }} >\r\n             \r\n//                    heatmap.create({\r\n//                      maxOpacity: 1,\r\n//                      radius: 30,\r\n\r\n//                    })\r\n              \r\n               \r\n//                  </GoogleMap>\r\n//             );\r\n//         }\r\n\r\n//         const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n//     return(\r\n//         <div style={{width: '100vw' , height: '100vh'}}>\r\n//             <WrappedMap \r\n//              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=visualization,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`} `} \r\n//              loadingElement= {<div style={{height: \"100%\"}} />}\r\n//              containerElement= {<div style={{height: \"100%\"}} />}\r\n//              mapElement= {<div style={{height: \"100%\"}} />}\r\n//             />\r\n//         </div>\r\n\r\n//     )\r\n\r\n// }\r\n\r\n// export default UsersMap;\r\n\r\n\r\n// method 4444444444444444\r\n\r\n// import React, { useState , useEffect} from \"react\";\r\n// import L from \"leaflet-heatmap.js\"\r\n\r\n// const UsersMap = () => {\r\n\r\n//     const [mapdata, setMapdata] = React.useState({\r\n//         max:8,\r\n//         userData: [\r\n//                    {lat:33.886917 , lng: 9.537499, val: 5},\r\n//                    {lat:34.886917 , lng: 10.537499, val: 2},\r\n//                    {lat:35.886917 , lng: 11.537499, val: 1},\r\n//                    {lat:36.886917 , lng: 12.537499, val: 6},\r\n//                    {lat:37.886917 , lng: 13.537499, val: 3},\r\n//                  ]\r\n \r\n//        });\r\n// return (\r\n\r\n//     const baseLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\r\n//             attribution: 'Tiles by <a href=\"http://mapc.org\">MAPC</a>, Data by <a href=\"http://mass.gov/mgis\">MassGIS</a>',\r\n//             maxZoom: 18\r\n//           }\r\n//     )\r\n\r\n\r\n// )\r\n\r\n// }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}