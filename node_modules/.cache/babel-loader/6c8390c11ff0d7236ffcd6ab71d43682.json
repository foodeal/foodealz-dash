{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\progress\\\\CircularIntegration.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n});\n\nclass CircularIntegration extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.timer = null;\n    this.state = {\n      loading: false,\n      success: false\n    };\n\n    this.handleButtonClick = () => {\n      if (!this.state.loading) {\n        this.setState({\n          success: false,\n          loading: true\n        }, () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              loading: false,\n              success: true\n            });\n          }, 2000);\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    const {\n      loading,\n      success\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    const buttonClassname = classNames({\n      [classes.buttonSuccess]: success\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"fab\",\n          color: \"primary\",\n          className: buttonClassname,\n          onClick: this.handleButtonClick,\n          children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 68,\n          className: classes.fabProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: buttonClassname,\n          disabled: loading,\n          onClick: this.handleButtonClick,\n          children: \"Accept terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          className: classes.buttonProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCircularIntegration.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CircularIntegration);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/progress/CircularIntegration.js"],"names":["React","PropTypes","classNames","withStyles","CircularProgress","green","Button","CheckIcon","SaveIcon","styles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularIntegration","Component","timer","state","loading","success","handleButtonClick","setState","setTimeout","componentWillUnmount","clearTimeout","render","classes","props","buttonClassname","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADiB;AAKvBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADD;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GALc;AASvBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAEd,KAAK,CAAC,GAAD,CADT;AAEb,eAAW;AACTc,MAAAA,eAAe,EAAEd,KAAK,CAAC,GAAD;AADb;AAFE,GATQ;AAevBe,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAEhB,KAAK,CAAC,GAAD,CADD;AAEXY,IAAAA,QAAQ,EAAE,UAFC;AAGXK,IAAAA,GAAG,EAAE,CAAC,CAHK;AAIXC,IAAAA,IAAI,EAAE,CAAC,CAJI;AAKXC,IAAAA,MAAM,EAAE;AALG,GAfU;AAsBvBC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,KAAK,EAAEhB,KAAK,CAAC,GAAD,CADE;AAEdY,IAAAA,QAAQ,EAAE,UAFI;AAGdK,IAAAA,GAAG,EAAE,KAHS;AAIdC,IAAAA,IAAI,EAAE,KAJQ;AAKdG,IAAAA,SAAS,EAAE,CAAC,EALE;AAMdC,IAAAA,UAAU,EAAE,CAAC;AANC;AAtBO,CAAL,CAApB;;AAgCA,MAAMC,mBAAN,SAAkC5B,KAAK,CAAC6B,SAAxC,CAAkD;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC,IADwC;AAAA,SAGhDC,KAHgD,GAGxC;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KAHwC;;AAAA,SAYhDC,iBAZgD,GAY5B,MAAM;AACxB,UAAI,CAAC,KAAKH,KAAL,CAAWC,OAAhB,EAAyB;AACvB,aAAKG,QAAL,CACE;AACEF,UAAAA,OAAO,EAAE,KADX;AAEED,UAAAA,OAAO,EAAE;AAFX,SADF,EAKE,MAAM;AACJ,eAAKF,KAAL,GAAaM,UAAU,CAAC,MAAM;AAC5B,iBAAKD,QAAL,CAAc;AACZH,cAAAA,OAAO,EAAE,KADG;AAEZC,cAAAA,OAAO,EAAE;AAFG,aAAd;AAID,WALsB,EAKpB,IALoB,CAAvB;AAMD,SAZH;AAcD;AACF,KA7B+C;AAAA;;AAQhDI,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,YAAY,CAAC,KAAKR,KAAN,CAAZ;AACD;;AAqBDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,UAAM;AAAES,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAMC,eAAe,GAAGxC,UAAU,CAAC;AACjC,OAACsC,OAAO,CAACtB,aAAT,GAAyBe;AADQ,KAAD,CAAlC;AAIA,wBACE;AAAK,MAAA,SAAS,EAAEO,OAAO,CAAC7B,IAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE6B,OAAO,CAAC1B,OAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,KADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAE4B,eAHb;AAIE,UAAA,OAAO,EAAE,KAAKR,iBAJhB;AAAA,oBAMGD,OAAO,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAmB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAN7B;AAAA;AAAA;AAAA;AAAA,gBADF,EASGD,OAAO,iBAAI,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAE,EAAxB;AAA4B,UAAA,SAAS,EAAEQ,OAAO,CAACpB;AAA/C;AAAA;AAAA;AAAA;AAAA,gBATd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAEoB,OAAO,CAAC1B,OAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAE4B,eAHb;AAIE,UAAA,QAAQ,EAAEV,OAJZ;AAKE,UAAA,OAAO,EAAE,KAAKE,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGF,OAAO,iBAAI,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAE,EAAxB;AAA4B,UAAA,SAAS,EAAEQ,OAAO,CAACf;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAVd;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAjE+C;;AAoElDG,mBAAmB,CAACe,SAApB,GAAgC;AAC9BH,EAAAA,OAAO,EAAEvC,SAAS,CAAC2C,MAAV,CAAiBC;AADI,CAAhC;AAIA,eAAe1C,UAAU,CAACM,MAAD,CAAV,CAAmBmB,mBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nclass CircularIntegration extends React.Component {\n  timer = null;\n\n  state = {\n    loading: false,\n    success: false,\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  handleButtonClick = () => {\n    if (!this.state.loading) {\n      this.setState(\n        {\n          success: false,\n          loading: true,\n        },\n        () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              loading: false,\n              success: true,\n            });\n          }, 2000);\n        },\n      );\n    }\n  };\n\n  render() {\n    const { loading, success } = this.state;\n    const { classes } = this.props;\n    const buttonClassname = classNames({\n      [classes.buttonSuccess]: success,\n    });\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"fab\"\n            color=\"primary\"\n            className={buttonClassname}\n            onClick={this.handleButtonClick}\n          >\n            {success ? <CheckIcon /> : <SaveIcon />}\n          </Button>\n          {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n        </div>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClassname}\n            disabled={loading}\n            onClick={this.handleButtonClick}\n          >\n            Accept terms\n          </Button>\n          {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nCircularIntegration.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIntegration);\n"]},"metadata":{},"sourceType":"module"}