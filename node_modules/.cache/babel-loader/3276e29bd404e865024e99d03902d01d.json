{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\containers\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Header, NotificationCenter, Sidebar, Workspace } from \"../components\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport FormatTextdirectionLToRIcon from \"@material-ui/icons/FormatTextdirectionLToR\";\nimport FormatTextdirectionRToLIcon from \"@material-ui/icons/FormatTextdirectionRToL\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { MobileBreakpoint } from \"../styleVariables\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport routes from \"../routes\";\nimport { useAppState } from \"../components/AppProvider/AppProvider\";\nimport useMountEffect from \"../mountEffect\";\nconst useStyles = makeStyles(theme => ({\n  panel: {\n    position: \"relative\",\n    overflow: \"hidden\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 64px)\",\n      paddingTop: \"64px\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 56px)\",\n      paddingTop: \"56px\"\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"calc(100vh - 64px)\"\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 1\n  },\n  speedDial: {\n    position: \"absolute\",\n    bottom: theme.spacing(1) * 2,\n    right: theme.spacing(1) * 3\n  }\n}));\n\nconst Dashboard = ({\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [state, dispatch] = useAppState();\n  const [opened, setOpened] = useState(true);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [openSpeedDial, setOpenSpeedDial] = useState(false);\n  const mediaMatcher = matchMedia(`(max-width: ${MobileBreakpoint}px)`);\n\n  const resizeDispatch = () => {\n    if (typeof Event === \"function\") {\n      window.dispatchEvent(new Event(\"resize\"));\n    } else {\n      const evt = window.document.createEvent(\"UIEvents\");\n      evt.initUIEvent(\"resize\", true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  };\n\n  const handleDrawerToggle = () => {\n    setOpened(!opened);\n    resizeDispatch();\n  };\n\n  const handleNotificationToggle = () => setNotificationsOpen(!notificationsOpen);\n\n  const handleFullscreenToggle = () => {\n    const element = document.querySelector(\"#root\");\n    const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\n\n    element.requestFullScreen = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || function () {\n      return false;\n    };\n\n    document.cancelFullScreen = document.cancelFullScreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || function () {\n      return false;\n    };\n\n    isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n  };\n\n  const handleSpeedDialOpen = () => setOpenSpeedDial(true);\n\n  const handleSpeedDialClose = () => setOpenSpeedDial(false);\n\n  const getRoutes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [routes.items.map((item, index) => item.type === \"external\" ? /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: item.path,\n      component: item.component,\n      name: item.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this) : item.type === \"submenu\" ? item.children.map(subItem => /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${item.path}${subItem.path}`,\n      component: subItem.component,\n      name: subItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)) : null), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n\n  useMountEffect(() => {\n    if (mediaMatcher.matches) setOpened(false);\n    mediaMatcher.addListener(match => {\n      setTimeout(() => {\n        if (match.matches) setOpened(false);else setOpened(true);\n      }, 300);\n    });\n    const unlisten = history.listen(() => {\n      if (mediaMatcher.matches) setOpened(false);\n      document.querySelector(\"#root > div > main\").scrollTop = 0;\n    });\n    return () => {\n      unlisten();\n      mediaMatcher.removeListener(match => {\n        setTimeout(() => {\n          if (match.matches) setOpened(false);else setOpened(true);\n        }, 300);\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logoAltText: \"Primer Admin Template\",\n      logo: `${process.env.PUBLIC_URL}/static/images/logo.svg`,\n      toggleDrawer: handleDrawerToggle,\n      toogleNotifications: handleNotificationToggle,\n      toggleFullscreen: handleFullscreenToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(classes.panel, \"theme-dark\"),\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        routes: routes.items,\n        opened: opened,\n        toggleDrawer: handleDrawerToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        opened: opened,\n        children: getRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotificationCenter, {\n        notificationsOpen: notificationsOpen,\n        toogleNotifications: handleNotificationToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      xsDown: true,\n      children: /*#__PURE__*/_jsxDEV(SpeedDial, {\n        ariaLabel: \"Settings\",\n        className: classes.speedDial,\n        icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this),\n        onBlur: handleSpeedDialClose,\n        onClose: handleSpeedDialClose,\n        onFocus: handleSpeedDialOpen,\n        onMouseEnter: handleSpeedDialOpen,\n        onMouseLeave: handleSpeedDialClose,\n        open: openSpeedDial,\n        children: [/*#__PURE__*/_jsxDEV(SpeedDialAction, {\n          icon: /*#__PURE__*/_jsxDEV(WbSunnyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this),\n          tooltipTitle: \"Toggle light/dark theme\",\n          onClick: () => dispatch({\n            type: \"type\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n          icon: state.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(FormatTextdirectionLToRIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FormatTextdirectionRToLIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this),\n          tooltipTitle: \"Toggle LTR/RTL direction\",\n          onClick: () => dispatch({\n            type: \"direction\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"CU/HkxXhWeaV27fEszKqduzSDQY=\", false, function () {\n  return [useStyles, useAppState, useMountEffect];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/containers/Dashboard.js"],"names":["Header","NotificationCenter","Sidebar","Workspace","React","useState","Redirect","Route","Switch","FormatTextdirectionLToRIcon","FormatTextdirectionRToLIcon","Hidden","MobileBreakpoint","SettingsIcon","SpeedDial","SpeedDialAction","SpeedDialIcon","WbSunnyIcon","classNames","makeStyles","routes","useAppState","useMountEffect","useStyles","theme","panel","position","overflow","width","maxWidth","breakpoints","down","height","minHeight","paddingTop","up","display","flexDirection","flexGrow","speedDial","bottom","spacing","right","Dashboard","history","classes","state","dispatch","opened","setOpened","notificationsOpen","setNotificationsOpen","openSpeedDial","setOpenSpeedDial","mediaMatcher","matchMedia","resizeDispatch","Event","window","dispatchEvent","evt","document","createEvent","initUIEvent","handleDrawerToggle","handleNotificationToggle","handleFullscreenToggle","element","querySelector","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","handleSpeedDialOpen","handleSpeedDialClose","getRoutes","items","map","item","index","type","path","component","name","children","subItem","matches","addListener","match","setTimeout","unlisten","listen","scrollTop","removeListener","process","env","PUBLIC_URL","direction"],"mappings":"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","sourcesContent":["import { Header, NotificationCenter, Sidebar, Workspace } from \"../components\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport FormatTextdirectionLToRIcon from \"@material-ui/icons/FormatTextdirectionLToR\";\nimport FormatTextdirectionRToLIcon from \"@material-ui/icons/FormatTextdirectionRToL\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { MobileBreakpoint } from \"../styleVariables\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport routes from \"../routes\";\nimport { useAppState } from \"../components/AppProvider/AppProvider\";\nimport useMountEffect from \"../mountEffect\";\n\nconst useStyles = makeStyles(theme => ({\n  panel: {\n    position: \"relative\",\n    overflow: \"hidden\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 64px)\",\n      paddingTop: \"64px\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"auto\",\n      minHeight: \"calc(100vh - 56px)\",\n      paddingTop: \"56px\"\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"calc(100vh - 64px)\"\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 1\n  },\n  speedDial: {\n    position: \"absolute\",\n    bottom: theme.spacing(1) * 2,\n    right: theme.spacing(1) * 3\n  }\n}));\n\nconst Dashboard = ({ history }) => {\n  const classes = useStyles();\n  const [state, dispatch] = useAppState();\n  const [opened, setOpened] = useState(true);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [openSpeedDial, setOpenSpeedDial] = useState(false);\n\n  const mediaMatcher = matchMedia(`(max-width: ${MobileBreakpoint}px)`);\n\n  const resizeDispatch = () => {\n    if (typeof Event === \"function\") {\n      window.dispatchEvent(new Event(\"resize\"));\n    } else {\n      const evt = window.document.createEvent(\"UIEvents\");\n      evt.initUIEvent(\"resize\", true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  };\n\n  const handleDrawerToggle = () => {\n    setOpened(!opened);\n    resizeDispatch();\n  };\n\n  const handleNotificationToggle = () =>\n    setNotificationsOpen(!notificationsOpen);\n\n  const handleFullscreenToggle = () => {\n    const element = document.querySelector(\"#root\");\n    const isFullscreen =\n      document.webkitIsFullScreen || document.mozFullScreen || false;\n\n    element.requestFullScreen =\n      element.requestFullScreen ||\n      element.webkitRequestFullScreen ||\n      element.mozRequestFullScreen ||\n      function () {\n        return false;\n      };\n    document.cancelFullScreen =\n      document.cancelFullScreen ||\n      document.webkitCancelFullScreen ||\n      document.mozCancelFullScreen ||\n      function () {\n        return false;\n      };\n    isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n  };\n\n  const handleSpeedDialOpen = () => setOpenSpeedDial(true);\n\n  const handleSpeedDialClose = () => setOpenSpeedDial(false);\n\n  const getRoutes = (\n    <Switch>\n      {routes.items.map((item, index) =>\n        item.type === \"external\" ? (\n          <Route\n            exact\n            path={item.path}\n            component={item.component}\n            name={item.name}\n            key={index}\n          />\n        ) : item.type === \"submenu\" ? (\n          item.children.map(subItem => (\n            <Route\n              exact\n              path={`${item.path}${subItem.path}`}\n              component={subItem.component}\n              name={subItem.name}\n            />\n          ))\n        ) : null\n      )}\n      <Redirect to=\"/404\" />\n    </Switch>\n  );\n\n  useMountEffect(() => {\n    if (mediaMatcher.matches) setOpened(false);\n    mediaMatcher.addListener(match => {\n      setTimeout(() => {\n        if (match.matches) setOpened(false);\n        else setOpened(true);\n      }, 300);\n    });\n\n    const unlisten = history.listen(() => {\n      if (mediaMatcher.matches) setOpened(false);\n      document.querySelector(\"#root > div > main\").scrollTop = 0;\n    });\n\n    return () => {\n      unlisten();\n      mediaMatcher.removeListener(match => {\n        setTimeout(() => {\n          if (match.matches) setOpened(false);\n          else setOpened(true);\n        }, 300);\n      });\n    };\n  });\n\n  return (\n    <>\n      <Header\n        logoAltText=\"Primer Admin Template\"\n        logo={`${process.env.PUBLIC_URL}/static/images/logo.svg`}\n        toggleDrawer={handleDrawerToggle}\n        toogleNotifications={handleNotificationToggle}\n        toggleFullscreen={handleFullscreenToggle}\n      />\n      <div className={classNames(classes.panel, \"theme-dark\")}>\n        <Sidebar\n          routes={routes.items}\n          opened={opened}\n          toggleDrawer={handleDrawerToggle}\n        />\n        <Workspace opened={opened}>{getRoutes}</Workspace>\n        <NotificationCenter\n          notificationsOpen={notificationsOpen}\n          toogleNotifications={handleNotificationToggle}\n        />\n      </div>\n\n      <Hidden xsDown>\n        <SpeedDial\n          ariaLabel=\"Settings\"\n          className={classes.speedDial}\n          icon={<SpeedDialIcon icon={<SettingsIcon />} />}\n          onBlur={handleSpeedDialClose}\n          onClose={handleSpeedDialClose}\n          onFocus={handleSpeedDialOpen}\n          onMouseEnter={handleSpeedDialOpen}\n          onMouseLeave={handleSpeedDialClose}\n          open={openSpeedDial}\n        >\n          <SpeedDialAction\n            icon={<WbSunnyIcon />}\n            tooltipTitle=\"Toggle light/dark theme\"\n            onClick={() => dispatch({ type: \"type\" })}\n          />\n          <SpeedDialAction\n            icon={\n              state.direction === \"rtl\" ? (\n                <FormatTextdirectionLToRIcon />\n              ) : (\n                <FormatTextdirectionRToLIcon />\n              )\n            }\n            tooltipTitle=\"Toggle LTR/RTL direction\"\n            onClick={() => dispatch({ type: \"direction\" })}\n          />\n        </SpeedDial>\n      </Hidden>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}