{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\drawers\\\\PersistentDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appFrame: {\n    height: 430,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%'\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  'appBarShift-left': {\n    marginLeft: drawerWidth\n  },\n  'appBarShift-right': {\n    marginRight: drawerWidth\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1) * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  'content-left': {\n    marginLeft: -drawerWidth\n  },\n  'content-right': {\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  'contentShift-left': {\n    marginLeft: 0\n  },\n  'contentShift-right': {\n    marginRight: 0\n  }\n});\n\nclass PersistentDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      anchor: 'left'\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChangeAnchor = event => {\n      this.setState({\n        anchor: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    const {\n      anchor,\n      open\n    } = this.state;\n\n    const drawer = /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"persistent\",\n      anchor: anchor,\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: this.handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: mailFolderListItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: otherMailFolderListItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n\n    let before = null;\n    let after = null;\n\n    if (anchor === 'left') {\n      before = drawer;\n    } else {\n      after = drawer;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"persistent-anchor\",\n        select: true,\n        label: \"Anchor\",\n        value: anchor,\n        onChange: this.handleChangeAnchor,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"left\",\n          children: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"right\",\n          children: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appFrame,\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {\n          className: classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n            [classes[`appBarShift-${anchor}`]]: open\n          }),\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            disableGutters: !open,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              \"aria-label\": \"Open drawer\",\n              onClick: this.handleDrawerOpen,\n              className: classNames(classes.menuButton, open && classes.hide),\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h1\",\n              color: \"inherit\",\n              noWrap: true,\n              children: \"Persistent drawer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), before, /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classNames(classes.content, classes[`content-${anchor}`], {\n            [classes.contentShift]: open,\n            [classes[`contentShift-${anchor}`]]: open\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: 'You think water moves fast? You should see ice.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), after]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(PersistentDrawer);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/drawers/PersistentDrawer.js"],"names":["React","PropTypes","classNames","withStyles","Drawer","AppBar","Toolbar","List","MenuItem","Typography","TextField","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","mailFolderListItems","otherMailFolderListItems","drawerWidth","styles","theme","root","flexGrow","appFrame","height","zIndex","overflow","position","display","width","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginLeft","marginRight","menuButton","hide","drawerPaper","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","content","backgroundColor","palette","background","default","spacing","contentShift","PersistentDrawer","Component","state","open","anchor","handleDrawerOpen","setState","handleDrawerClose","handleChangeAnchor","event","target","value","render","classes","props","drawer","paper","direction","before","after","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appFrame: {\n    height: 430,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  'appBarShift-left': {\n    marginLeft: drawerWidth,\n  },\n  'appBarShift-right': {\n    marginRight: drawerWidth,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1) * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  'content-left': {\n    marginLeft: -drawerWidth,\n  },\n  'content-right': {\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  'contentShift-left': {\n    marginLeft: 0,\n  },\n  'contentShift-right': {\n    marginRight: 0,\n  },\n});\n\nclass PersistentDrawer extends React.Component {\n  state = {\n    open: false,\n    anchor: 'left',\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChangeAnchor = event => {\n    this.setState({\n      anchor: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { anchor, open } = this.state;\n\n    const drawer = (\n      <Drawer\n        variant=\"persistent\"\n        anchor={anchor}\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mailFolderListItems}</List>\n        <Divider />\n        <List>{otherMailFolderListItems}</List>\n      </Drawer>\n    );\n\n    let before = null;\n    let after = null;\n\n    if (anchor === 'left') {\n      before = drawer;\n    } else {\n      after = drawer;\n    }\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"persistent-anchor\"\n          select\n          label=\"Anchor\"\n          value={anchor}\n          onChange={this.handleChangeAnchor}\n          margin=\"normal\"\n        >\n          <MenuItem value=\"left\">left</MenuItem>\n          <MenuItem value=\"right\">right</MenuItem>\n        </TextField>\n        <div className={classes.appFrame}>\n          <AppBar\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n              [classes[`appBarShift-${anchor}`]]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h1\" color=\"inherit\" noWrap>\n                Persistent drawer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {before}\n          <main\n            className={classNames(classes.content, classes[`content-${anchor}`], {\n              [classes.contentShift]: open,\n              [classes[`contentShift-${anchor}`]]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Typography>{'You think water moves fast? You should see ice.'}</Typography>\n          </main>\n          {after}\n        </div>\n      </div>\n    );\n  }\n}\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawer);\n"]},"metadata":{},"sourceType":"module"}