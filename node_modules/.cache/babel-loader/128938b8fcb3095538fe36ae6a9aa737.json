{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\text-fields\\\\FormattedInputs.js\";\n\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n});\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MaskedInput, { ...other,\n    ref: inputRef,\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: '\\u2000',\n    showMask: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumberFormat, { ...other,\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    prefix: \"$\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = NumberFormatCustom;\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nclass FormattedInputs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textmask: '(1  )    -    ',\n      numberformat: '1320'\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      textmask,\n      numberformat\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"formatted-text-mask-input\",\n          children: \"react-text-mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: textmask,\n          onChange: this.handleChange('textmask'),\n          id: \"formatted-text-mask-input\",\n          inputComponent: TextMaskCustom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.formControl,\n        label: \"react-number-format\",\n        value: numberformat,\n        onChange: this.handleChange('numberformat'),\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(FormattedInputs);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextMaskCustom\");\n$RefreshReg$(_c2, \"NumberFormatCustom\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/text-fields/FormattedInputs.js"],"names":["React","MaskedInput","NumberFormat","PropTypes","withStyles","Input","InputLabel","TextField","FormControl","styles","theme","container","display","flexWrap","formControl","margin","spacing","TextMaskCustom","props","inputRef","other","propTypes","func","isRequired","NumberFormatCustom","onChange","values","target","value","FormattedInputs","Component","state","textmask","numberformat","handleChange","name","event","setState","render","classes","inputComponent","object"],"mappings":"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","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={inputRef}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n"]},"metadata":{},"sourceType":"module"}