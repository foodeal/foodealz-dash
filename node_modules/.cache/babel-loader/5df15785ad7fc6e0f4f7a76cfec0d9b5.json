{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { TextField } from '@material-ui/core';\n// import { Button } from '@material-ui/core';\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\n// const TestValide = () => {\n//     const [data, setData] = React.useState({\n//         error: '',\n//         data: [],\n//         temp: [],\n//         error: null,\n//         fields: [],\n//         errors: [],\n//         username:'',\n//         email:'',\n//         phone:'',\n//         password:''\n//       });\n//        const [formIsValid, setFormIsValid] = React.useState(false);\n//      const handleValidation =() =>{\n//          const fields= data.fields;\n//          const errors={};\n//          let formIsValid = true;\n//             //Name\n//             if(!fields[\"username\"]){\n//                formIsValid = false;\n//                errors[\"username\"] = \"Cannot be empty\";\n//             }     \n//             if(typeof fields[\"username\"] !== \"undefined\"){\n//                if(!fields[\"username\"].match(/^[a-zA-Z]+$/)){\n//                  formIsValid = false;\n//                   errors[\"username\"] = \"Only letters\";\n//                }        \n//             }\n//               //Email\n//             if(!fields[\"email\"]){\n//                formIsValid = false;\n//                errors[\"email\"] = \"Cannot be empty\";\n//             }\n//             if(typeof fields[\"email\"] !== \"undefined\"){\n//                const lastAtPos = fields[\"email\"].lastIndexOf('@');\n//                const lastDotPos = fields[\"email\"].lastIndexOf('.');\n//                if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n//                  formIsValid = false;\n//                   errors[\"email\"] = \"Email is not valid\";\n//                 }\n//            }  \n//            //Phone\n//             if(!fields[\"phone\"]){\n//                formIsValid = false;\n//                errors[\"phone\"] = \"Cannot be empty\";\n//             }     \n//             if(typeof fields[\"phone\"] !== \"undefined\"){\n//                if(!fields[\"phone\"].match(/^[0-9]+$/)){\n//                formIsValid = false;\n//                   errors[\"phone\"] = \"Only numbers\";\n//                }        \n//             }\n//             setData({\n//           ...data,\n//           errors: errors,\n//         });\n//         return formIsValid;\n//      };\n//      const contactSubmit = (e) => {\n//        console.log(\"hjlm:\")\n//          e.preventDefault()\n//          if(handleValidation()){\n//                alert(\"Form submitted\");\n//             }else{\n//                alert(\"Form has errors.\")\n//             }\n//      }\n//      const handleChange =(field, e) =>{\n//          let fields = data.fields;\n//          fields[e]=field;\n//            setData({\n//           ...data,\n//           fields: fields,\n//         });\n//          console.log(fields)\n//      }\n//     return (\n//         <div>\n//             <h2>Sign In</h2>\n//              <form name=\"contactform\" className=\"contactform\" >\n//                         <div className=\"col-md-6\">\n//                           <fieldset>\n//                                <input  name=\"username\" type=\"text\" size=\"30\" placeholder=\"username\" onChange={(e)=> handleChange(e.target.value,\"username\")} value={data.fields[\"username\"]}/>\n//                                <span style={{color: \"red\"}}>{data.errors[\"username\"]}</span>\n//                               <br/>\n//                              <input name=\"email\" type=\"text\" size=\"30\" placeholder=\"Email\" onChange={(e)=>handleChange(e.target.value,\"email\")} value={data.fields[\"email\"]}/>\n//                              <span style={{color: \"red\"}}>{data.errors[\"email\"]}</span>\n//                              <br/>\n//                              <input name=\"phone\" type=\"text\" size=\"30\" placeholder=\"Phone\" onChange={(e)=>handleChange(e.target.value,\"phone\")} value={data.fields[\"phone\"]}/>\n//                               <span style={{color: \"red\"}}>{data.errors[\"phone\"]}</span>\n//                              <br/>\n//                              {/* <input refs=\"address\" type=\"text\" size=\"30\" placeholder=\"Address\" onChange={this.handleChange.bind(this, \"address\")} value={this.state.fields[\"address\"]}/>\n//                              <br/> */}\n//                          </fieldset>\n//                       </div>\n//                       <Button onClick={(e)=>contactSubmit(e)}> submit</Button> \n//                   </form>\n//             {/* <form>\n//                 <div >\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>username:</p>\n//                     <input type=\"text\" name=\"username\" onChange={e => usernamechange(e.target.value)} placeholder=\"enter username\"  />\n//                     {/* <p>{error.username?.message}</p> */}\n//                     {/* <TextField style={{ marginLeft: '20px', width: '300px', marginTop: '25px', padding: '15px' }}\n//                         name=\"username\" variant=\"filled\"  /> */}\n// {/*                     \n//                 </div>\n//                 <div >\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>email :</p>\n//                     <input type=\"text\" name=\"email\" placeholder=\"enter email\" onChange={e => emailchange(e.target.value)}   /> */}\n//                     {/* <p>{error.email?.message}</p> */}\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\n//                         name=\"email\" variant=\"filled\"  /> */}\n//                 {/* </div>\n//                 <div >\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>password :</p>\n//                     <input type=\"text\" name=\"password\" placeholder=\"enter password\" onChange={e => passwordchange(e.target.value)}  /> */}\n//                     {/* <p>{error.password?.message}</p> */}\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\n//                         name=\"password\" variant=\"filled\"  /> */}\n//                 {/* </div>\n//                 <div >\n//                     <input type=\"submit\" id=\"submit\"   /> */}\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\n//                         name=\"password\" variant=\"filled\"  /> */}\n//                 {/* </div>\n//             </form>\n//             <Button> submit</Button> */} \n//         </div>\n//     );\n// }\n// export default TestValide;","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/TestValide/TestValide.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { TextField } from '@material-ui/core';\r\n// import { Button } from '@material-ui/core';\r\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n// const TestValide = () => {\r\n\r\n\r\n//     const [data, setData] = React.useState({\r\n    \r\n//         error: '',\r\n//         data: [],\r\n//         temp: [],\r\n//         error: null,\r\n//         fields: [],\r\n//         errors: [],\r\n//         username:'',\r\n//         email:'',\r\n//         phone:'',\r\n//         password:''\r\n       \r\n//       });\r\n//        const [formIsValid, setFormIsValid] = React.useState(false);\r\n     \r\n//      const handleValidation =() =>{\r\n//          const fields= data.fields;\r\n//          const errors={};\r\n//          let formIsValid = true;\r\n\r\n//             //Name\r\n//             if(!fields[\"username\"]){\r\n//                formIsValid = false;\r\n//                errors[\"username\"] = \"Cannot be empty\";\r\n//             }     \r\n//             if(typeof fields[\"username\"] !== \"undefined\"){\r\n//                if(!fields[\"username\"].match(/^[a-zA-Z]+$/)){\r\n//                  formIsValid = false;\r\n//                   errors[\"username\"] = \"Only letters\";\r\n//                }        \r\n//             }\r\n\r\n//               //Email\r\n//             if(!fields[\"email\"]){\r\n//                formIsValid = false;\r\n//                errors[\"email\"] = \"Cannot be empty\";\r\n//             }\r\n      \r\n//             if(typeof fields[\"email\"] !== \"undefined\"){\r\n//                const lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n//                const lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n//                if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n//                  formIsValid = false;\r\n//                   errors[\"email\"] = \"Email is not valid\";\r\n//                 }\r\n//            }  \r\n//            //Phone\r\n//             if(!fields[\"phone\"]){\r\n//                formIsValid = false;\r\n//                errors[\"phone\"] = \"Cannot be empty\";\r\n//             }     \r\n//             if(typeof fields[\"phone\"] !== \"undefined\"){\r\n//                if(!fields[\"phone\"].match(/^[0-9]+$/)){\r\n//                formIsValid = false;\r\n//                   errors[\"phone\"] = \"Only numbers\";\r\n//                }        \r\n//             }\r\n           \r\n\r\n\r\n//             setData({\r\n//           ...data,\r\n//           errors: errors,\r\n//         });\r\n\r\n//         return formIsValid;\r\n\r\n\r\n//      };\r\n\r\n//      const contactSubmit = (e) => {\r\n//        console.log(\"hjlm:\")\r\n//          e.preventDefault()\r\n//          if(handleValidation()){\r\n//                alert(\"Form submitted\");\r\n//             }else{\r\n//                alert(\"Form has errors.\")\r\n//             }\r\n\r\n//      }\r\n\r\n//      const handleChange =(field, e) =>{\r\n//          let fields = data.fields;\r\n//          fields[e]=field;\r\n//            setData({\r\n//           ...data,\r\n//           fields: fields,\r\n//         });\r\n//          console.log(fields)\r\n//      }\r\n     \r\n\r\n\r\n        \r\n    \r\n    \r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Sign In</h2>\r\n//              <form name=\"contactform\" className=\"contactform\" >\r\n//                         <div className=\"col-md-6\">\r\n//                           <fieldset>\r\n//                                <input  name=\"username\" type=\"text\" size=\"30\" placeholder=\"username\" onChange={(e)=> handleChange(e.target.value,\"username\")} value={data.fields[\"username\"]}/>\r\n//                                <span style={{color: \"red\"}}>{data.errors[\"username\"]}</span>\r\n//                               <br/>\r\n//                              <input name=\"email\" type=\"text\" size=\"30\" placeholder=\"Email\" onChange={(e)=>handleChange(e.target.value,\"email\")} value={data.fields[\"email\"]}/>\r\n//                              <span style={{color: \"red\"}}>{data.errors[\"email\"]}</span>\r\n//                              <br/>\r\n//                              <input name=\"phone\" type=\"text\" size=\"30\" placeholder=\"Phone\" onChange={(e)=>handleChange(e.target.value,\"phone\")} value={data.fields[\"phone\"]}/>\r\n//                               <span style={{color: \"red\"}}>{data.errors[\"phone\"]}</span>\r\n//                              <br/>\r\n//                              {/* <input refs=\"address\" type=\"text\" size=\"30\" placeholder=\"Address\" onChange={this.handleChange.bind(this, \"address\")} value={this.state.fields[\"address\"]}/>\r\n//                              <br/> */}\r\n//                          </fieldset>\r\n//                       </div>\r\n//                       <Button onClick={(e)=>contactSubmit(e)}> submit</Button> \r\n//                   </form>\r\n                  \r\n                   \r\n//             {/* <form>\r\n//                 <div >\r\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>username:</p>\r\n//                     <input type=\"text\" name=\"username\" onChange={e => usernamechange(e.target.value)} placeholder=\"enter username\"  />\r\n//                     {/* <p>{error.username?.message}</p> */}\r\n//                     {/* <TextField style={{ marginLeft: '20px', width: '300px', marginTop: '25px', padding: '15px' }}\r\n//                         name=\"username\" variant=\"filled\"  /> */}\r\n// {/*                     \r\n//                 </div>\r\n//                 <div >\r\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>email :</p>\r\n//                     <input type=\"text\" name=\"email\" placeholder=\"enter email\" onChange={e => emailchange(e.target.value)}   /> */}\r\n//                     {/* <p>{error.email?.message}</p> */}\r\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n//                         name=\"email\" variant=\"filled\"  /> */}\r\n                    \r\n//                 {/* </div>\r\n//                 <div >\r\n//                     <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>password :</p>\r\n//                     <input type=\"text\" name=\"password\" placeholder=\"enter password\" onChange={e => passwordchange(e.target.value)}  /> */}\r\n//                     {/* <p>{error.password?.message}</p> */}\r\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n//                         name=\"password\" variant=\"filled\"  /> */}\r\n                  \r\n//                 {/* </div>\r\n\r\n//                 <div >\r\n                    \r\n//                     <input type=\"submit\" id=\"submit\"   /> */}\r\n//                     {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n//                         name=\"password\" variant=\"filled\"  /> */}\r\n                  \r\n//                 {/* </div>\r\n\r\n//             </form>\r\n//             <Button> submit</Button> */} \r\n//         </div>\r\n\r\n//     );\r\n// }\r\n// export default TestValide;"]},"metadata":{},"sourceType":"module"}