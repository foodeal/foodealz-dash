{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\selects\\\\MultipleSelect.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1) / 4\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nclass MultipleSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"select-multiple\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: this.state.name,\n          onChange: this.handleChange,\n          input: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"select-multiple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this),\n          MenuProps: MenuProps,\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            style: {\n              fontWeight: this.state.name.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n            },\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"select-multiple-checkbox\",\n          children: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: this.state.name,\n          onChange: this.handleChange,\n          input: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"select-multiple-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 20\n          }, this),\n          renderValue: selected => selected.join(', '),\n          MenuProps: MenuProps,\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: this.state.name.indexOf(name) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"select-multiple-chip\",\n          children: \"Chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: this.state.name,\n          onChange: this.handleChange,\n          input: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"select-multiple-chip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }, this),\n          renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chips,\n            children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n              label: value,\n              className: classes.chip\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this),\n          MenuProps: MenuProps,\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            style: {\n              fontWeight: this.state.name.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n            },\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MultipleSelect);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/selects/MultipleSelect.js"],"names":["React","PropTypes","withStyles","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","styles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","maxWidth","chips","chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","MultipleSelect","Component","state","name","handleChange","event","setState","target","value","render","classes","props","map","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","selected","join","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing(1) / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple\" />}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-checkbox\" />}\n            renderValue={selected => selected.join(', ')}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name}>\n                <Checkbox checked={this.state.name.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n"]},"metadata":{},"sourceType":"module"}