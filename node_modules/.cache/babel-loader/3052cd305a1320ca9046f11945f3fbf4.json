{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\Apps\\\\Media.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Wrapper } from \"../../components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth from \"@material-ui/core/withWidth\";\nconst useStyles = makeStyles(theme => ({\n  toolBar: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  }\n}));\nlet images = [];\n\nfor (let num = 1; num <= 21; num += 1) {\n  images.push(num);\n}\n\nconst getColWidth = bp => {\n  let col;\n  if (bp === \"lg\") col = 3;\n  if (bp === \"md\") col = 2;\n  if (bp === \"xs\") col = 1;\n  return col;\n};\n\nconst gallery = images.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: `${process.env.PUBLIC_URL}/static/images/unsplash/${tile}.jpg`,\n    alt: tile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n    title: tile,\n    subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Gallery image: \", tile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this),\n    actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        color: \"rgba(255, 255, 255, 0.87)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this),\n    className: \"px-1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)]\n}, tile, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\n\nconst Media = ({\n  width\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    padding: false,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"default\",\n          className: \"mx-1\",\n          children: \"Add album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flexSpacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"Menu\",\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"Menu\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"Menu\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridList, {\n      cols: getColWidth(width),\n      spacing: 1,\n      cellHeight: 400,\n      children: gallery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Media, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Media;\nexport default withWidth()(Media);\n\nvar _c;\n\n$RefreshReg$(_c, \"Media\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Apps/Media.js"],"names":["AppBar","Button","ChevronLeftIcon","ChevronRightIcon","FavoriteIcon","GridList","GridListTile","GridListTileBar","IconButton","React","SettingsIcon","Toolbar","Wrapper","makeStyles","withWidth","useStyles","theme","toolBar","paddingLeft","spacing","paddingRight","images","num","push","getColWidth","bp","col","gallery","map","tile","process","env","PUBLIC_URL","color","Media","width","classes"],"mappings":"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","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Wrapper } from \"../../components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nconst useStyles = makeStyles(theme => ({\n  toolBar: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  }\n}));\n\nlet images = [];\n\nfor (let num = 1; num <= 21; num += 1) {\n  images.push(num);\n}\n\nconst getColWidth = bp => {\n  let col;\n  if (bp === \"lg\") col = 3;\n  if (bp === \"md\") col = 2;\n  if (bp === \"xs\") col = 1;\n  return col;\n};\n\nconst gallery = images.map(tile => (\n  <GridListTile key={tile}>\n    <img\n      src={`${process.env.PUBLIC_URL}/static/images/unsplash/${tile}.jpg`}\n      alt={tile}\n    />\n    <GridListTileBar\n      title={tile}\n      subtitle={<span>Gallery image: {tile}</span>}\n      actionIcon={\n        <IconButton style={{ color: \"rgba(255, 255, 255, 0.87)\" }}>\n          <FavoriteIcon />\n        </IconButton>\n      }\n      className=\"px-1\"\n    />\n  </GridListTile>\n));\n\nconst Media = ({ width }) => {\n  const classes = useStyles();\n  return (\n    <Wrapper padding={false}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar className={classes.toolBar}>\n          <Button variant=\"contained\" color=\"default\" className=\"mx-1\">\n            Add album\n          </Button>\n          <span className=\"flexSpacer\" />\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\n            <SettingsIcon />\n          </IconButton>\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\n            <ChevronRightIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <GridList cols={getColWidth(width)} spacing={1} cellHeight={400}>\n        {gallery}\n      </GridList>\n    </Wrapper>\n  );\n};\n\nexport default withWidth()(Media);\n"]},"metadata":{},"sourceType":"module"}