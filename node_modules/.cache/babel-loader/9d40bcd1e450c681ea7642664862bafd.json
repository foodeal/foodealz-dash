{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\Maps\\\\PartnersMaps.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { GoogleMapReact, withScriptjs, withGoogleMap, Marker } from 'google-map-react';\n\nconst PartnersMaps = () => {\n  _s();\n\n  const [data, setData] = React.useState({\n    error: '',\n    data: [],\n    temp: [],\n    error: null,\n    search: null,\n    array: [],\n    center: {\n      lat: 33.886917,\n      lng: 9.537499\n    },\n    zoom: 11\n  });\n  const [selectedPartner, setSelectedPartner] = useState(null);\n\n  const getData = async () => {\n    const url = `https://api.foodealzapi.com/restaurants`;\n    await fetch(url).then(res => res.json()).then(res => {\n      // console.log(\" le resultat est :\", res);\n      setData({ ...data,\n        data: res,\n        temp: res\n      });\n    }).catch(error => {\n      setData({ ...data,\n        error: 'Error Loading content'\n      });\n    });\n  }; // console.log(\"les partenaires sont :\", data.data);\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: `AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`\n        },\n        defaultCenter: data.center,\n        defaultZoom: data.zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PartnersMaps, \"1AXMhQO2Ffd2UFrDDoAbiKy5rGk=\");\n\n_c = PartnersMaps;\nexport default PartnersMaps; // import React, { useState , useEffect} from \"react\";\n// import {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\";\n// const PartnersMaps = () => {\n//     const [data, setData] = React.useState({\n//         error: '',\n//         data: [],\n//         temp: [],\n//         error: null,\n//         search: null,\n//         array: [],\n//       });\n//       const getData = async () => {\n//         const url = `https://api.foodealzapi.com/restaurants`;\n//         await fetch(url)\n//           .then(res => res.json())\n//           .then(res => {\n//             console.log(\" le resultat est :\",res);\n//             setData({\n//               ...data,\n//               data: res,\n//               temp: res,\n//             });\n//           })\n//           .catch(error => {\n//             setData({\n//               ...data,\n//               error: 'Error Loading content',\n//             })\n//           })\n//       };\n//       console.log(\"les partenaires sont :\", data.data);\n//       useEffect(() => {\n//         getData()\n//       }, [])\n//       const Map = ()  =>{\n//         const [selectedPartner, setSelectedPartner] = useState(null);\n//             return (\n//             <GoogleMap  defaultZoom={10} defaultCenter={{lat:33.886917 , lng:9.537499 }} >\n//                 {data.data.map((partner) => (\n//                     <Marker key={partner.restaurant_id} position= {{lat:partner.latitude , lng:partner.longitude}} onClick={() => {\n//                       setSelectedPartner(partner);\n//                      }} />\n//                 ))}\n//                 {selectedPartner && (\n//                   <InfoWindow\n//                   position= {{lat:selectedPartner.latitude , lng:selectedPartner.longitude}}\n//                   onCloseClick={() => {\n//                     setSelectedPartner(null);\n//                   }}\n//                   >\n//                     <div> \n//                       <h2>{selectedPartner.name}</h2>\n//                       <p>{selectedPartner.description}</p>\n//                     </div>\n//                   </InfoWindow>\n//                 )}\n//                  </GoogleMap>\n//             );\n//         }\n//         const WrappedMap = withScriptjs(withGoogleMap(Map));\n//     return(\n//         <div style={{width: '100vw' , height: '100vh'}}>\n//             <WrappedMap \n//              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`}`} \n//              loadingElement= {<div style={{height: \"100%\"}} />}\n//              containerElement= {<div style={{height: \"100%\"}} />}\n//              mapElement= {<div style={{height: \"100%\"}} />}\n//             />\n//         </div>\n//     )\n// }\n// export default PartnersMaps;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnersMaps\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Maps/PartnersMaps.js"],"names":["React","Component","GoogleMapReact","withScriptjs","withGoogleMap","Marker","PartnersMaps","data","setData","useState","error","temp","search","array","center","lat","lng","zoom","selectedPartner","setSelectedPartner","getData","url","fetch","then","res","json","catch","useEffect","height","width","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,MAJF,QAMO,kBANP;;AAUA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCH,IAAAA,IAAI,EAAE,EAH+B;AAIrCI,IAAAA,IAAI,EAAE,EAJ+B;AAKrCD,IAAAA,KAAK,EAAE,IAL8B;AAMrCE,IAAAA,MAAM,EAAE,IAN6B;AAOrCC,IAAAA,KAAK,EAAE,EAP8B;AAQrCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,SADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KAR6B;AAYrCC,IAAAA,IAAI,EAAE;AAZ+B,GAAf,CAAxB;AAgBA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,IAAD,CAAtD;;AACA,QAAMW,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAI,yCAAb;AACA,UAAMC,KAAK,CAACD,GAAD,CAAL,CACHE,IADG,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAEHF,IAFG,CAEEC,GAAG,IAAI;AACX;AAEAhB,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENA,QAAAA,IAAI,EAAEiB,GAFA;AAGNb,QAAAA,IAAI,EAAEa;AAHA,OAAD,CAAP;AAMD,KAXG,EAaHE,KAbG,CAaGhB,KAAK,IAAI;AACdF,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENG,QAAAA,KAAK,EAAE;AAFD,OAAD,CAAP;AAID,KAlBG,CAAN;AAmBD,GArBD,CAlByB,CAyCzB;;;AACAiB,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAOA;AAAA;AACE;AACA;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAG;AAAR,SADpB;AAEE,QAAA,aAAa,EAAEvB,IAAI,CAACO,MAFtB;AAGE,QAAA,WAAW,EAAEP,IAAI,CAACU;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAqBD,CAtED;;GAAMX,Y;;KAAAA,Y;AAwEN,eAAeA,YAAf,C,CAeA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  GoogleMapReact,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  Marker\r\n\r\n} from 'google-map-react';\r\n\r\n\r\n\r\nconst PartnersMaps = () => {\r\n  const [data, setData] = React.useState({\r\n\r\n    error: '',\r\n    data: [],\r\n    temp: [],\r\n    error: null,\r\n    search: null,\r\n    array: [],\r\n    center: {\r\n      lat: 33.886917,\r\n      lng: 9.537499\r\n    },\r\n    zoom: 11\r\n\r\n\r\n  });\r\n  const [selectedPartner, setSelectedPartner] = useState(null);\r\n  const getData = async () => {\r\n    const url = `https://api.foodealzapi.com/restaurants`;\r\n    await fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        // console.log(\" le resultat est :\", res);\r\n\r\n        setData({\r\n          ...data,\r\n          data: res,\r\n          temp: res,\r\n        });\r\n\r\n      })\r\n\r\n      .catch(error => {\r\n        setData({\r\n          ...data,\r\n          error: 'Error Loading content',\r\n        })\r\n      })\r\n  };\r\n\r\n  // console.log(\"les partenaires sont :\", data.data);\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n    // Important! Always set the container height explicitly\r\n    <div style={{ height: '100vh', width: '100%' }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: `AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE` }}\r\n        defaultCenter={data.center}\r\n        defaultZoom={data.zoom}\r\n      >\r\n         {/* {data.data.map((partner) => (\r\n\r\n                    <Marker key={partner.restaurant_id} position= {{lat:partner.latitude , lng:partner.longitude}} onClick={() => {\r\n                      setSelectedPartner(partner);\r\n\r\n                     }} />\r\n                ))} */}\r\n        </GoogleMapReact>\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default PartnersMaps;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState , useEffect} from \"react\";\r\n// import {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\";\r\n\r\n\r\n\r\n\r\n// const PartnersMaps = () => {\r\n\r\n//     const [data, setData] = React.useState({\r\n\r\n//         error: '',\r\n//         data: [],\r\n//         temp: [],\r\n//         error: null,\r\n//         search: null,\r\n//         array: [],\r\n\r\n\r\n//       });\r\n//       const getData = async () => {\r\n//         const url = `https://api.foodealzapi.com/restaurants`;\r\n//         await fetch(url)\r\n//           .then(res => res.json())\r\n//           .then(res => {\r\n//             console.log(\" le resultat est :\",res);\r\n\r\n//             setData({\r\n//               ...data,\r\n//               data: res,\r\n//               temp: res,\r\n//             });\r\n\r\n//           })\r\n\r\n//           .catch(error => {\r\n//             setData({\r\n//               ...data,\r\n//               error: 'Error Loading content',\r\n//             })\r\n//           })\r\n//       };\r\n\r\n//       console.log(\"les partenaires sont :\", data.data);\r\n//       useEffect(() => {\r\n//         getData()\r\n//       }, [])\r\n\r\n\r\n\r\n\r\n//       const Map = ()  =>{\r\n\r\n//         const [selectedPartner, setSelectedPartner] = useState(null);\r\n\r\n//             return (\r\n//             <GoogleMap  defaultZoom={10} defaultCenter={{lat:33.886917 , lng:9.537499 }} >\r\n//                 {data.data.map((partner) => (\r\n\r\n//                     <Marker key={partner.restaurant_id} position= {{lat:partner.latitude , lng:partner.longitude}} onClick={() => {\r\n//                       setSelectedPartner(partner);\r\n\r\n//                      }} />\r\n//                 ))}\r\n//                 {selectedPartner && (\r\n//                   <InfoWindow\r\n//                   position= {{lat:selectedPartner.latitude , lng:selectedPartner.longitude}}\r\n//                   onCloseClick={() => {\r\n//                     setSelectedPartner(null);\r\n//                   }}\r\n//                   >\r\n//                     <div> \r\n//                       <h2>{selectedPartner.name}</h2>\r\n//                       <p>{selectedPartner.description}</p>\r\n//                     </div>\r\n//                   </InfoWindow>\r\n//                 )}\r\n//                  </GoogleMap>\r\n//             );\r\n//         }\r\n\r\n//         const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n//     return(\r\n//         <div style={{width: '100vw' , height: '100vh'}}>\r\n//             <WrappedMap \r\n//              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`}`} \r\n//              loadingElement= {<div style={{height: \"100%\"}} />}\r\n//              containerElement= {<div style={{height: \"100%\"}} />}\r\n//              mapElement= {<div style={{height: \"100%\"}} />}\r\n//             />\r\n//         </div>\r\n\r\n//     )\r\n\r\n// }\r\n\r\n// export default PartnersMaps;"]},"metadata":{},"sourceType":"module"}