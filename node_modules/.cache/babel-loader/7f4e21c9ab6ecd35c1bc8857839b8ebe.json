{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\autocomplete\\\\IntegrationDownshift.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nconst suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  const {\n    InputProps,\n    classes,\n    ref,\n    ...other\n  } = inputProps;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    InputProps: {\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot\n      },\n      ...InputProps\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nfunction renderSuggestion({\n  suggestion,\n  index,\n  itemProps,\n  highlightedIndex,\n  selectedItem\n}) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return /*#__PURE__*/_createElement(MenuItem, { ...itemProps,\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    },\n    __self: this\n  }, suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string\n  }).isRequired\n};\n\nfunction getSuggestions(inputValue) {\n  let count = 0;\n  return suggestions.filter(suggestion => {\n    const keep = (!inputValue || suggestion.label.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) && count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nclass DownshiftMultiple extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: '',\n      selectedItem: []\n    };\n\n    this.handleKeyDown = event => {\n      const {\n        inputValue,\n        selectedItem\n      } = this.state;\n\n      if (selectedItem.length && !inputValue.length && keycode(event) === 'backspace') {\n        this.setState({\n          selectedItem: selectedItem.slice(0, selectedItem.length - 1)\n        });\n      }\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.handleChange = item => {\n      let {\n        selectedItem\n      } = this.state;\n\n      if (selectedItem.indexOf(item) === -1) {\n        selectedItem = [...selectedItem, item];\n      }\n\n      this.setState({\n        inputValue: '',\n        selectedItem\n      });\n    };\n\n    this.handleDelete = item => () => {\n      this.setState(state => {\n        const selectedItem = [...state.selectedItem];\n        selectedItem.splice(selectedItem.indexOf(item), 1);\n        return {\n          selectedItem\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      inputValue,\n      selectedItem\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Downshift, {\n      id: \"downshift-multiple\",\n      inputValue: inputValue,\n      onChange: this.handleChange,\n      selectedItem: selectedItem,\n      children: ({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue: inputValue2,\n        selectedItem: selectedItem2,\n        highlightedIndex\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [renderInput({\n          fullWidth: true,\n          classes,\n          InputProps: getInputProps({\n            startAdornment: selectedItem.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n              tabIndex: -1,\n              label: item,\n              className: classes.chip,\n              onDelete: this.handleDelete(item)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)),\n            onChange: this.handleInputChange,\n            onKeyDown: this.handleKeyDown,\n            placeholder: 'Select multiple countries'\n          }),\n          label: 'Label'\n        }), isOpen ? /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          square: true,\n          children: getSuggestions(inputValue2).map((suggestion, index) => renderSuggestion({\n            suggestion,\n            index,\n            itemProps: getItemProps({\n              item: suggestion.label\n            }),\n            highlightedIndex,\n            selectedItem: selectedItem2\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  chip: {\n    margin: `${theme.spacing(1) / 2}px ${theme.spacing(1) / 4}px`\n  },\n  inputRoot: {\n    flexWrap: 'wrap'\n  },\n  divider: {\n    height: theme.spacing(1) * 2\n  }\n});\n\nlet popperNode;\n\nfunction IntegrationDownshift(props) {\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Downshift, {\n      id: \"downshift-simple\",\n      children: ({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue,\n        selectedItem,\n        highlightedIndex\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [renderInput({\n          fullWidth: true,\n          classes,\n          InputProps: getInputProps({\n            placeholder: 'Search a country (start with a)'\n          })\n        }), isOpen ? /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          square: true,\n          children: getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n            suggestion,\n            index,\n            itemProps: getItemProps({\n              item: suggestion.label\n            }),\n            highlightedIndex,\n            selectedItem\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownshiftMultiple, {\n      classes: classes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Downshift, {\n      id: \"downshift-popper\",\n      children: ({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue,\n        selectedItem,\n        highlightedIndex\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [renderInput({\n          fullWidth: true,\n          classes,\n          InputProps: getInputProps({\n            placeholder: 'With Popper'\n          }),\n          ref: node => {\n            popperNode = node;\n          }\n        }), /*#__PURE__*/_jsxDEV(Popper, {\n          open: isOpen,\n          anchorEl: popperNode,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            square: true,\n            style: {\n              width: popperNode ? popperNode.clientWidth : null\n            },\n            children: getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n              suggestion,\n              index,\n              itemProps: getItemProps({\n                item: suggestion.label\n              }),\n              highlightedIndex,\n              selectedItem\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n\n_c = IntegrationDownshift;\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationDownshift);\n\nvar _c;\n\n$RefreshReg$(_c, \"IntegrationDownshift\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/autocomplete/IntegrationDownshift.js"],"names":["React","PropTypes","keycode","Downshift","withStyles","TextField","Popper","Paper","MenuItem","Chip","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","renderSuggestion","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","fontWeight","propTypes","number","object","string","shape","isRequired","getSuggestions","inputValue","count","filter","keep","toLowerCase","DownshiftMultiple","Component","state","handleKeyDown","event","length","setState","slice","handleInputChange","target","value","handleChange","item","handleDelete","splice","render","props","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","container","fullWidth","startAdornment","map","chip","onChange","onKeyDown","placeholder","paper","styles","theme","flexGrow","height","position","zIndex","marginTop","spacing","left","right","margin","flexWrap","divider","popperNode","IntegrationDownshift","node","width","clientWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n        },\n        ...InputProps,\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(inputValue) {\n  let count = 0;\n\n  return suggestions.filter(suggestion => {\n    const keep =\n      (!inputValue || suggestion.label.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) &&\n      count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nclass DownshiftMultiple extends React.Component {\n  state = {\n    inputValue: '',\n    selectedItem: [],\n  };\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItem } = this.state;\n    if (selectedItem.length && !inputValue.length && keycode(event) === 'backspace') {\n      this.setState({\n        selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n      });\n    }\n  };\n\n  handleInputChange = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  handleChange = item => {\n    let { selectedItem } = this.state;\n\n    if (selectedItem.indexOf(item) === -1) {\n      selectedItem = [...selectedItem, item];\n    }\n\n    this.setState({\n      inputValue: '',\n      selectedItem,\n    });\n  };\n\n  handleDelete = item => () => {\n    this.setState(state => {\n      const selectedItem = [...state.selectedItem];\n      selectedItem.splice(selectedItem.indexOf(item), 1);\n      return { selectedItem };\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { inputValue, selectedItem } = this.state;\n\n    return (\n      <Downshift\n        id=\"downshift-multiple\"\n        inputValue={inputValue}\n        onChange={this.handleChange}\n        selectedItem={selectedItem}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue: inputValue2,\n          selectedItem: selectedItem2,\n          highlightedIndex,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={this.handleDelete(item)}\n                  />\n                )),\n                onChange: this.handleInputChange,\n                onKeyDown: this.handleKeyDown,\n                placeholder: 'Select multiple countries',\n              }),\n              label: 'Label',\n            })}\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    margin: `${theme.spacing(1) / 2}px ${theme.spacing(1) / 4}px`,\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  divider: {\n    height: theme.spacing(1) * 2,\n  },\n});\n\nlet popperNode;\n\nfunction IntegrationDownshift(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Downshift id=\"downshift-simple\">\n        {({ getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                placeholder: 'Search a country (start with a)',\n              }),\n            })}\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n      <div className={classes.divider} />\n      <DownshiftMultiple classes={classes} />\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-popper\">\n        {({ getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                placeholder: 'With Popper',\n              }),\n              ref: node => {\n                popperNode = node;\n              },\n            })}\n            <Popper open={isOpen} anchorEl={popperNode}>\n              <Paper square style={{ width: popperNode ? popperNode.clientWidth : null }}>\n                {getSuggestions(inputValue).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem,\n                  }),\n                )}\n              </Paper>\n            </Popper>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationDownshift);\n"]},"metadata":{},"sourceType":"module"}