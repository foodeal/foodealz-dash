{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\selection-controls\\\\CheckboxLabels.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500]\n    }\n  },\n  checked: {},\n  size: {\n    width: 40,\n    height: 40\n  },\n  sizeIcon: {\n    fontSize: 20\n  }\n};\n\nclass CheckboxLabels extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      checkedB: true,\n      checkedF: true,\n      checkedG: true\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.checkedA,\n          onChange: this.handleChange('checkedA'),\n          value: \"checkedA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this),\n        label: \"Secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.checkedB,\n          onChange: this.handleChange('checkedB'),\n          value: \"checkedB\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this),\n        label: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: \"checkedC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 36\n        }, this),\n        label: \"Uncontrolled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        disabled: true,\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: \"checkedD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }, this),\n        label: \"Disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        disabled: true,\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: true,\n          value: \"checkedE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this),\n        label: \"Disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.checkedF,\n          onChange: this.handleChange('checkedF'),\n          value: \"checkedF\",\n          indeterminate: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this),\n        label: \"Indeterminate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.checkedG,\n          onChange: this.handleChange('checkedG'),\n          value: \"checkedG\",\n          classes: {\n            root: classes.root,\n            checked: classes.checked\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this),\n        label: \"Custom color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this),\n          checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 62\n          }, this),\n          value: \"checkedH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this),\n        label: \"Custom icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          className: classes.size,\n          icon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n            className: classes.sizeIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this),\n          checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n            className: classes.sizeIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 28\n          }, this),\n          value: \"checkedI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this),\n        label: \"Custom size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CheckboxLabels);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/selection-controls/CheckboxLabels.js"],"names":["React","PropTypes","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","styles","root","color","checked","size","width","height","sizeIcon","fontSize","CheckboxLabels","Component","state","checkedA","checkedB","checkedF","checkedG","handleChange","name","event","setState","target","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n  size: {\n    width: 40,\n    height: 40,\n  },\n  sizeIcon: {\n    fontSize: 20,\n  },\n};\n\nclass CheckboxLabels extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Secondary\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Primary\"\n        />\n        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\n        <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n        <FormControlLabel\n          disabled\n          control={<Checkbox checked value=\"checkedE\" />}\n          label=\"Disabled\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedF}\n              onChange={this.handleChange('checkedF')}\n              value=\"checkedF\"\n              indeterminate\n            />\n          }\n          label=\"Indeterminate\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedG}\n              onChange={this.handleChange('checkedG')}\n              value=\"checkedG\"\n              classes={{\n                root: classes.root,\n                checked: classes.checked,\n              }}\n            />\n          }\n          label=\"Custom color\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />\n          }\n          label=\"Custom icon\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.size}\n              icon={<CheckBoxOutlineBlankIcon className={classes.sizeIcon} />}\n              checkedIcon={<CheckBoxIcon className={classes.sizeIcon} />}\n              value=\"checkedI\"\n            />\n          }\n          label=\"Custom size\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxLabels);\n"]},"metadata":{},"sourceType":"module"}