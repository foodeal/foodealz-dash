{"ast":null,"code":"// import { Message, Wrapper } from '../../components';\n// import React, { Fragment, useState } from 'react';\n// import {\n//   mockFolders,\n//   mockFolders2,\n//   mockMessages,\n//   mockTags\n// } from '../../utils/mock';\n// import AppBar from '@material-ui/core/AppBar';\n// import Divider from '@material-ui/core/Divider';\n// import Drawer from '@material-ui/core/Drawer';\n// import Hidden from '@material-ui/core/Hidden';\n// import IconButton from '@material-ui/core/IconButton';\n// import List from '@material-ui/core/List';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import { drawerWidth } from '../../styleVariables';\n// import { makeStyles } from '@material-ui/core/styles';\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     flexGrow: 1,\n//     overflow: 'hidden',\n//     position: 'relative',\n//     display: 'flex'\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 100\n//   },\n//   toolBar: {\n//     paddingLeft: theme.spacing(1) / 2,\n//     paddingRight: theme.spacing(1) / 2\n//   },\n//   drawerPaper: {\n//     position: 'relative',\n//     width: drawerWidth,\n//     maxWidth: drawerWidth,\n//     zIndex: theme.zIndex.drawer + 3,\n//     [theme.breakpoints.up('md')]: {\n//       backgroundColor: 'transparent'\n//     },\n//     [theme.breakpoints.down('sm')]: {\n//       top: '0',\n//       height: 'calc(100vh - 56px)'\n//     },\n//     border: 0,\n//     height: 'auto'\n//   },\n//   content: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.default,\n//     padding: theme.spacing(1),\n//     minWidth: 0\n//   },\n//   modal: {\n//     [theme.breakpoints.down('sm')]: {\n//       top: '56px'\n//     },\n//     [theme.breakpoints.up('sm')]: {\n//       top: '64px'\n//     },\n//     zIndex: '1000'\n//   },\n//   backdrop: {\n//     [theme.breakpoints.down('sm')]: {\n//       top: '56px'\n//     },\n//     [theme.breakpoints.up('sm')]: {\n//       top: '64px'\n//     }\n//   }\n// }));\n// const Messages = () => {\n//   const classes = useStyles();\n//   const [opened, setOpened] = useState(false);\n//   const handleDrawerToggle = () => setOpened(!opened);\n//   const menu = (\n//     <Fragment>\n//       <List>{mockFolders}</List>\n//       <Divider />\n//       <List>{mockFolders2}</List>\n//       <Divider />\n//       <List>{mockTags}</List>\n//     </Fragment>\n//   );\n//   return (\n//     <Wrapper padding={false}>\n//       <Hidden mdUp>\n//         <AppBar position=\"static\" className={classes.appBar}>\n//           <Toolbar className={classes.toolBar}>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               onClick={() => handleDrawerToggle()}\n//             >\n//               <MenuIcon />\n//             </IconButton>\n//             <Typography variant=\"h6\" color=\"inherit\" noWrap>\n//               Messages\n//             </Typography>\n//           </Toolbar>\n//         </AppBar>\n//       </Hidden>\n//       <div className={classes.root}>\n//         <Hidden smDown>\n//           <Drawer\n//             variant=\"permanent\"\n//             ModalProps={{\n//               keepMounted: false,\n//               className: classes.modal,\n//               BackdropProps: {\n//                 className: classes.backdrop\n//               },\n//               onBackdropClick: handleDrawerToggle\n//             }}\n//             classes={{\n//               paper: classes.drawerPaper\n//             }}\n//           >\n//             {menu}\n//           </Drawer>\n//         </Hidden>\n//         <Hidden mdUp>\n//           <Drawer\n//             variant=\"temporary\"\n//             open={opened}\n//             ModalProps={{\n//               keepMounted: false,\n//               className: classes.modal,\n//               BackdropProps: {\n//                 className: classes.backdrop\n//               },\n//               onBackdropClick: handleDrawerToggle\n//             }}\n//             classes={{\n//               paper: classes.drawerPaper\n//             }}\n//           >\n//             {menu}\n//           </Drawer>\n//         </Hidden>\n//         <main className={classes.content}>\n//           <Message messages={mockMessages} />\n//         </main>\n//       </div>\n//     </Wrapper>\n//   );\n// };\n// export default Messages;","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Apps/Messages.js"],"names":[],"mappingssourcesContent":["// import { Message, Wrapper } from '../../components';\n// import React, { Fragment, useState } from 'react';\n// import {\n//   mockFolders,\n//   mockFolders2,\n//   mockMessages,\n//   mockTags\n// } from '../../utils/mock';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Divider from '@material-ui/core/Divider';\n// import Drawer from '@material-ui/core/Drawer';\n// import Hidden from '@material-ui/core/Hidden';\n// import IconButton from '@material-ui/core/IconButton';\n// import List from '@material-ui/core/List';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import { drawerWidth } from '../../styleVariables';\n// import { makeStyles } from '@material-ui/core/styles';\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     flexGrow: 1,\n//     overflow: 'hidden',\n//     position: 'relative',\n//     display: 'flex'\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 100\n//   },\n//   toolBar: {\n//     paddingLeft: theme.spacing(1) / 2,\n//     paddingRight: theme.spacing(1) / 2\n//   },\n//   drawerPaper: {\n//     position: 'relative',\n//     width: drawerWidth,\n//     maxWidth: drawerWidth,\n//     zIndex: theme.zIndex.drawer + 3,\n//     [theme.breakpoints.up('md')]: {\n//       backgroundColor: 'transparent'\n//     },\n//     [theme.breakpoints.down('sm')]: {\n//       top: '0',\n//       height: 'calc(100vh - 56px)'\n//     },\n//     border: 0,\n//     height: 'auto'\n//   },\n//   content: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.default,\n//     padding: theme.spacing(1),\n//     minWidth: 0\n//   },\n//   modal: {\n//     [theme.breakpoints.down('sm')]: {\n//       top: '56px'\n//     },\n//     [theme.breakpoints.up('sm')]: {\n//       top: '64px'\n//     },\n//     zIndex: '1000'\n//   },\n//   backdrop: {\n//     [theme.breakpoints.down('sm')]: {\n//       top: '56px'\n//     },\n//     [theme.breakpoints.up('sm')]: {\n//       top: '64px'\n//     }\n//   }\n// }));\n\n// const Messages = () => {\n//   const classes = useStyles();\n//   const [opened, setOpened] = useState(false);\n\n//   const handleDrawerToggle = () => setOpened(!opened);\n\n//   const menu = (\n//     <Fragment>\n//       <List>{mockFolders}</List>\n//       <Divider />\n//       <List>{mockFolders2}</List>\n//       <Divider />\n//       <List>{mockTags}</List>\n//     </Fragment>\n//   );\n\n//   return (\n//     <Wrapper padding={false}>\n//       <Hidden mdUp>\n//         <AppBar position=\"static\" className={classes.appBar}>\n//           <Toolbar className={classes.toolBar}>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               onClick={() => handleDrawerToggle()}\n//             >\n//               <MenuIcon />\n//             </IconButton>\n//             <Typography variant=\"h6\" color=\"inherit\" noWrap>\n//               Messages\n//             </Typography>\n//           </Toolbar>\n//         </AppBar>\n//       </Hidden>\n//       <div className={classes.root}>\n//         <Hidden smDown>\n//           <Drawer\n//             variant=\"permanent\"\n//             ModalProps={{\n//               keepMounted: false,\n//               className: classes.modal,\n//               BackdropProps: {\n//                 className: classes.backdrop\n//               },\n//               onBackdropClick: handleDrawerToggle\n//             }}\n//             classes={{\n//               paper: classes.drawerPaper\n//             }}\n//           >\n//             {menu}\n//           </Drawer>\n//         </Hidden>\n\n//         <Hidden mdUp>\n//           <Drawer\n//             variant=\"temporary\"\n//             open={opened}\n//             ModalProps={{\n//               keepMounted: false,\n//               className: classes.modal,\n//               BackdropProps: {\n//                 className: classes.backdrop\n//               },\n//               onBackdropClick: handleDrawerToggle\n//             }}\n//             classes={{\n//               paper: classes.drawerPaper\n//             }}\n//           >\n//             {menu}\n//           </Drawer>\n//         </Hidden>\n\n//         <main className={classes.content}>\n//           <Message messages={mockMessages} />\n//         </main>\n//       </div>\n//     </Wrapper>\n//   );\n// };\n\n// export default Messages;\n"]},"metadata":{},"sourceType":"module"}