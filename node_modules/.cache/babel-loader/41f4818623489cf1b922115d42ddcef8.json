{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\components\\\\Cards\\\\NewsCard.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  textEllipsis: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'pre'\n  }\n}));\n\nconst NewsCard = ({\n  feed,\n  subtitle\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Newsfeed\",\n      subheader: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: feed.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [item.avatar ? item.avatar : /*#__PURE__*/_jsxDEV(Avatar, {\n          children: item.subject.charAt(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.subject,\n          secondary: item.message,\n          inset: true,\n          classes: {\n            primary: classes.textEllipsis,\n            secondary: classes.textEllipsis\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCard;\nNewsCard.propTypes = {\n  feed: PropTypes.arrayOf(PropTypes.shape({\n    from: PropTypes.string,\n    avatar: PropTypes.element,\n    subject: PropTypes.string,\n    message: PropTypes.string\n  })).isRequired,\n  subtitle: PropTypes.string\n};\nexport default NewsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCard\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/components/Cards/NewsCard.js"],"names":["Avatar","Card","CardHeader","Divider","List","ListItem","ListItemText","PropTypes","React","makeStyles","useStyles","theme","textEllipsis","textOverflow","overflow","whiteSpace","NewsCard","feed","subtitle","classes","map","item","index","avatar","subject","charAt","message","primary","secondary","propTypes","arrayOf","shape","from","string","element","isRequired"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,UADF;AAEZC,IAAAA,QAAQ,EAAE,QAFE;AAGZC,IAAAA,UAAU,EAAE;AAHA;AADuB,CAAL,CAAN,CAA5B;;AAQA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AACvC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,UAAlB;AAA6B,MAAA,SAAS,EAAEQ;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAA,gBACGD,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAAA,mBACGD,IAAI,CAACE,MAAL,GACCF,IAAI,CAACE,MADN,gBAGC,QAAC,MAAD;AAAA,oBAASF,IAAI,CAACG,OAAL,CAAaC,MAAb,CAAoB,CAApB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAME,QAAC,YAAD;AACE,UAAA,OAAO,EAAEJ,IAAI,CAACG,OADhB;AAEE,UAAA,SAAS,EAAEH,IAAI,CAACK,OAFlB;AAGE,UAAA,KAAK,MAHP;AAIE,UAAA,OAAO,EAAE;AACPC,YAAAA,OAAO,EAAER,OAAO,CAACP,YADV;AAEPgB,YAAAA,SAAS,EAAET,OAAO,CAACP;AAFZ;AAJX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAeU,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5BD;;GAAMN,Q;UACYN,S;;;KADZM,Q;AA8BNA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,IAAI,EAAEV,SAAS,CAACuB,OAAV,CACJvB,SAAS,CAACwB,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEzB,SAAS,CAAC0B,MADF;AAEdV,IAAAA,MAAM,EAAEhB,SAAS,CAAC2B,OAFJ;AAGdV,IAAAA,OAAO,EAAEjB,SAAS,CAAC0B,MAHL;AAIdP,IAAAA,OAAO,EAAEnB,SAAS,CAAC0B;AAJL,GAAhB,CADI,EAOJE,UARiB;AASnBjB,EAAAA,QAAQ,EAAEX,SAAS,CAAC0B;AATD,CAArB;AAYA,eAAejB,QAAf","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  textEllipsis: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'pre'\n  }\n}));\n\nconst NewsCard = ({ feed, subtitle }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardHeader title=\"Newsfeed\" subheader={subtitle} />\n      <Divider />\n      <List>\n        {feed.map((item, index) => (\n          <ListItem key={index}>\n            {item.avatar ? (\n              item.avatar\n            ) : (\n              <Avatar>{item.subject.charAt(0)}</Avatar>\n            )}\n            <ListItemText\n              primary={item.subject}\n              secondary={item.message}\n              inset\n              classes={{\n                primary: classes.textEllipsis,\n                secondary: classes.textEllipsis\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nNewsCard.propTypes = {\n  feed: PropTypes.arrayOf(\n    PropTypes.shape({\n      from: PropTypes.string,\n      avatar: PropTypes.element,\n      subject: PropTypes.string,\n      message: PropTypes.string\n    })\n  ).isRequired,\n  subtitle: PropTypes.string\n};\n\nexport default NewsCard;\n"]},"metadata":{},"sourceType":"module"}