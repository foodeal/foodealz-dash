{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\TestValide\\\\TestValide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { withStyles, makeStyles } from '@material-ui/core/styles'; // let schema = yup.object().shape({\n//     username: yup.string().required('please enter username'),\n//     email: yup.string().email().required('email invallid'),\n//     password: yup.string().min(4).max(8).required('password nvalid'),\n// });\n\nconst TestValide = () => {\n  _s();\n\n  // const { register, handleSubmit, error } = useForm({\n  //     resolver: yupResolver(schema),\n  // });\n  const [data, setData] = React.useState({\n    error: '',\n    data: [],\n    temp: [],\n    error: null,\n    username: '',\n    email: '',\n    password: ''\n  }); //   const usernamechange = (e) => {\n  //     setData({\n  //       ...data,\n  //       username: e\n  //     })\n  //   }\n  //   const emailchange = (e) => {\n  //     setData({\n  //       ...data,\n  //       email: e\n  //     })\n  //   }\n  //   const passwordchange = (e) => {\n  //     setData({\n  //       ...data,\n  //       password: e\n  //     })\n  //   }\n  // const submitForm = () => {\n  //     console.log(data.username);\n  //     console.log(data.email);\n  //     console.log(data.password);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: e => usernamechange(e.target.value),\n          placeholder: \"enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"enter email\",\n          onChange: e => emailchange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"password :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"enter password\",\n          onChange: e => passwordchange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestValide, \"SRNwv5BCfiPxJLn7tVh4o52vTs8=\");\n\n_c = TestValide;\nexport default TestValide;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestValide\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/TestValide/TestValide.js"],"names":["React","useState","useEffect","TextField","Button","useForm","yupResolver","yup","withStyles","makeStyles","TestValide","data","setData","error","temp","username","email","password","fontSize","color","fontWeight","marginTop","e","usernamechange","target","value","emailchange","passwordchange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n// let schema = yup.object().shape({\r\n//     username: yup.string().required('please enter username'),\r\n//     email: yup.string().email().required('email invallid'),\r\n//     password: yup.string().min(4).max(8).required('password nvalid'),\r\n\r\n// });\r\n\r\n\r\n\r\nconst TestValide = () => {\r\n\r\n    // const { register, handleSubmit, error } = useForm({\r\n    //     resolver: yupResolver(schema),\r\n    // });\r\n\r\n    const [data, setData] = React.useState({\r\n    \r\n        error: '',\r\n        data: [],\r\n        temp: [],\r\n        error: null,\r\n        username:'',\r\n        email:'',\r\n        password:''\r\n       \r\n      });\r\n\r\n    //   const usernamechange = (e) => {\r\n    //     setData({\r\n    //       ...data,\r\n    //       username: e\r\n    //     })\r\n    //   }\r\n\r\n    //   const emailchange = (e) => {\r\n    //     setData({\r\n    //       ...data,\r\n    //       email: e\r\n    //     })\r\n    //   }\r\n\r\n    //   const passwordchange = (e) => {\r\n    //     setData({\r\n    //       ...data,\r\n    //       password: e\r\n    //     })\r\n    //   }\r\n\r\n    // const submitForm = () => {\r\n    //     console.log(data.username);\r\n    //     console.log(data.email);\r\n    //     console.log(data.password);\r\n    // };\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <h2>Sign In</h2>\r\n            <form>\r\n                <div >\r\n                    <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>username:</p>\r\n                    <input type=\"text\" name=\"username\" onChange={e => usernamechange(e.target.value)} placeholder=\"enter username\"  />\r\n                    {/* <p>{error.username?.message}</p> */}\r\n                    {/* <TextField style={{ marginLeft: '20px', width: '300px', marginTop: '25px', padding: '15px' }}\r\n                        name=\"username\" variant=\"filled\"  /> */}\r\n                    \r\n                </div>\r\n                <div >\r\n                    <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>email :</p>\r\n                    <input type=\"text\" name=\"email\" placeholder=\"enter email\" onChange={e => emailchange(e.target.value)}   />\r\n                    {/* <p>{error.email?.message}</p> */}\r\n                    {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n                        name=\"email\" variant=\"filled\"  /> */}\r\n                    \r\n                </div>\r\n                <div >\r\n                    <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>password :</p>\r\n                    <input type=\"text\" name=\"password\" placeholder=\"enter password\" onChange={e => passwordchange(e.target.value)}  />\r\n                    {/* <p>{error.password?.message}</p> */}\r\n                    {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n                        name=\"password\" variant=\"filled\"  /> */}\r\n                  \r\n                </div>\r\n\r\n                <div >\r\n                    \r\n                    <input type=\"submit\" id=\"submit\"   />\r\n                    {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n                        name=\"password\" variant=\"filled\"  /> */}\r\n                  \r\n                </div>\r\n\r\n            </form>\r\n            {/* <Button> submit</Button> */}\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default TestValide;"]},"metadata":{},"sourceType":"module"}