{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Button from '@material-ui/core/Button';\n// import { parse } from \"papaparse\";\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TablePagination from '@material-ui/core/TablePagination';\n// // import {csv} from \"d3\";\n// const TestCSV = () => {\n//     const [page, setPage] = React.useState(0);\n//     const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//     const handleChangePage = (event, newPage) => {\n//         setPage(newPage);\n//     };\n//     const handleChangeRowsPerPage = (event) => {\n//         setRowsPerPage(+event.target.value);\n//         setPage(0);\n//     };\n//     const [data, setData] = React.useState({\n//         error: '',\n//         data: [],\n//         result: [],\n//         error: null,\n//     });\n//     const StyledTableCell = withStyles((theme) => ({\n//         head: {\n//             backgroundColor: theme.palette.common.white,\n//             color: theme.palette.common.black,\n//         },\n//         body: {\n//             fontSize: 14,\n//         },\n//     }))(TableCell);\n//     const StyledTableRow = withStyles((theme) => ({\n//         root: {\n//             '&:nth-of-type(odd)': {\n//                 backgroundColor: theme.palette.action.hover,\n//             },\n//         },\n//     }))(TableRow);\n//     const addArray = () => {\n//         axios.post(`entrer url`, data.result)\n//           .then((res) => {\n//             console.log(\"add done\");\n//           })\n//           .catch(error => {\n//             console.log(\" problem in posting \" + error)\n//           });\n//       }\n//     const onDrop = (e) => {\n//         e.preventDefault();\n//         console.log(e.dataTransfer.files);\n//         Array.from(e.dataTransfer.files).filter(\n//             (files) => files.type === \"application/vnd.ms-excel\"\n//         ).forEach(async (file) => {\n//             const text = await file.text();\n//             const donner = parse(text)\n//             let arrayy = []\n//             let postdata=[]\n//             for (let i = 1; i < donner.data.length; i++) {\n//                arrayy.push(donner.data[i])\n//                const postarry= {\"image url\": donner.data[i][1],\"discount\":donner.data[i][2],\"PriceAfterDiscount\":donner.data[i][3],\"PriceBeforeDiscount\":donner.data[i][4], \"description\":donner.data[i][5],\"deal description\":donner.data[i][6], \"starting date\":donner.data[i][7],\"expired date\":donner.data[i][8], \"restaurant id\":donner.data[i][9] }\n//                postdata.push(postarry)\n//             }\n//             console.log(\"les data sont\", arrayy);\n//             setData({\n//                 ...data,\n//                 data: arrayy,\n//                 result: postdata\n//             })\n//             await localStorage.setItem('result',donner.data)\n//         });\n//     }\n//     const useStyles = makeStyles({\n//         table: {\n//             minWidth: 400,\n//             marginTop: 20,\n//         },\n//     });\n//     const classes = useStyles();\n//     return (\n//         <div>\n//             <h3 style={{ marginLeft: \"20px\" }} > Import offers from CSV</h3>\n//             <Button\n//                 style={{ backgroundColor: \"#008037\", marginLeft: \"20px\" }}\n//                 onDragOver={(e) => {\n//                     e.preventDefault();\n//                 }}\n//                 onDrop={(e) => { onDrop(e); console.log(\"data est :\",data.data)\n//                 }}\n//                 onClick={() =>{addArray()}}\n//             > import file CSV </Button>\n//             <div>\n//                 <paper>\n//                     <TableContainer>\n//                         <Table className={classes.table}>\n//                             <TableHead>\n//                                 <TableRow>\n//                                     <StyledTableCell> dealId</StyledTableCell>\n//                                     <StyledTableCell>image url</StyledTableCell>\n//                                     <StyledTableCell>discount</StyledTableCell>\n//                                     <StyledTableCell>PriceAfterDiscount</StyledTableCell>\n//                                     <StyledTableCell>PriceBeforeDiscount</StyledTableCell>\n//                                     <StyledTableCell>description</StyledTableCell>\n//                                     <StyledTableCell>deal description</StyledTableCell>\n//                                     <StyledTableCell>starting date</StyledTableCell>\n//                                     <StyledTableCell>expired date </StyledTableCell>\n//                                     <StyledTableCell>restaurant id</StyledTableCell>\n//                                 </TableRow>\n//                             </TableHead>\n//                             <TableBody>\n//                             {data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => {\n//                                     return (\n//                                         <StyledTableRow hover role=\"checkbox\">\n//                                             <StyledTableCell >\n//                                                 {item[0]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[1]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[2]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[3]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[4]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[5]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[6]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[7]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[8]}\n//                                             </StyledTableCell >\n//                                             <StyledTableCell align=\"right\">\n//                                                 {item[9]}\n//                                             </StyledTableCell >\n//                                         </StyledTableRow>\n//                                     )\n//                                 })\n//                                 }\n//                             </TableBody>\n//                         </Table>\n//                     </TableContainer>\n//                     <TablePagination\n//                         rowsPerPageOptions={[10, 25, 100]}\n//                         component=\"div\"\n//                         count={data.data.length}\n//                         rowsPerPage={rowsPerPage}\n//                         page={page}\n//                         onChangePage={handleChangePage}\n//                         onChangeRowsPerPage={handleChangeRowsPerPage}\n//                     /> \n//                 </paper>\n//             </div>\n//         </div>\n//     )\n// };\n// export default TestCSV;","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Deals/DealsCSV.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Button from '@material-ui/core/Button';\r\n// import { parse } from \"papaparse\";\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// // import {csv} from \"d3\";\r\n// const TestCSV = () => {\r\n\r\n    \r\n\r\n//     const [page, setPage] = React.useState(0);\r\n//     const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n//     const handleChangePage = (event, newPage) => {\r\n//         setPage(newPage);\r\n//     };\r\n\r\n//     const handleChangeRowsPerPage = (event) => {\r\n//         setRowsPerPage(+event.target.value);\r\n//         setPage(0);\r\n//     };\r\n\r\n//     const [data, setData] = React.useState({\r\n//         error: '',\r\n//         data: [],\r\n//         result: [],\r\n//         error: null,\r\n\r\n//     });\r\n//     const StyledTableCell = withStyles((theme) => ({\r\n//         head: {\r\n//             backgroundColor: theme.palette.common.white,\r\n//             color: theme.palette.common.black,\r\n//         },\r\n//         body: {\r\n//             fontSize: 14,\r\n//         },\r\n//     }))(TableCell);\r\n//     const StyledTableRow = withStyles((theme) => ({\r\n//         root: {\r\n//             '&:nth-of-type(odd)': {\r\n//                 backgroundColor: theme.palette.action.hover,\r\n//             },\r\n//         },\r\n//     }))(TableRow);\r\n\r\n//     const addArray = () => {\r\n//         axios.post(`entrer url`, data.result)\r\n//           .then((res) => {\r\n//             console.log(\"add done\");\r\n//           })\r\n//           .catch(error => {\r\n//             console.log(\" problem in posting \" + error)\r\n    \r\n//           });\r\n    \r\n//       }\r\n\r\n//     const onDrop = (e) => {\r\n//         e.preventDefault();\r\n//         console.log(e.dataTransfer.files);\r\n//         Array.from(e.dataTransfer.files).filter(\r\n//             (files) => files.type === \"application/vnd.ms-excel\"\r\n//         ).forEach(async (file) => {\r\n//             const text = await file.text();\r\n//             const donner = parse(text)\r\n//             let arrayy = []\r\n//             let postdata=[]\r\n//             for (let i = 1; i < donner.data.length; i++) {\r\n//                arrayy.push(donner.data[i])\r\n//                const postarry= {\"image url\": donner.data[i][1],\"discount\":donner.data[i][2],\"PriceAfterDiscount\":donner.data[i][3],\"PriceBeforeDiscount\":donner.data[i][4], \"description\":donner.data[i][5],\"deal description\":donner.data[i][6], \"starting date\":donner.data[i][7],\"expired date\":donner.data[i][8], \"restaurant id\":donner.data[i][9] }\r\n//                postdata.push(postarry)\r\n//             }\r\n//             console.log(\"les data sont\", arrayy);\r\n//             setData({\r\n//                 ...data,\r\n//                 data: arrayy,\r\n//                 result: postdata\r\n//             })\r\n//             await localStorage.setItem('result',donner.data)\r\n//         });\r\n//     }\r\n\r\n\r\n\r\n//     const useStyles = makeStyles({\r\n//         table: {\r\n//             minWidth: 400,\r\n//             marginTop: 20,\r\n//         },\r\n//     });\r\n//     const classes = useStyles();\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3 style={{ marginLeft: \"20px\" }} > Import offers from CSV</h3>\r\n//             <Button\r\n//                 style={{ backgroundColor: \"#008037\", marginLeft: \"20px\" }}\r\n\r\n\r\n//                 onDragOver={(e) => {\r\n//                     e.preventDefault();\r\n\r\n//                 }}\r\n//                 onDrop={(e) => { onDrop(e); console.log(\"data est :\",data.data)\r\n//                 }}\r\n//                 onClick={() =>{addArray()}}\r\n\r\n\r\n//             > import file CSV </Button>\r\n//             <div>\r\n//                 <paper>\r\n//                     <TableContainer>\r\n//                         <Table className={classes.table}>\r\n//                             <TableHead>\r\n//                                 <TableRow>\r\n//                                     <StyledTableCell> dealId</StyledTableCell>\r\n//                                     <StyledTableCell>image url</StyledTableCell>\r\n//                                     <StyledTableCell>discount</StyledTableCell>\r\n//                                     <StyledTableCell>PriceAfterDiscount</StyledTableCell>\r\n//                                     <StyledTableCell>PriceBeforeDiscount</StyledTableCell>\r\n//                                     <StyledTableCell>description</StyledTableCell>\r\n//                                     <StyledTableCell>deal description</StyledTableCell>\r\n//                                     <StyledTableCell>starting date</StyledTableCell>\r\n//                                     <StyledTableCell>expired date </StyledTableCell>\r\n//                                     <StyledTableCell>restaurant id</StyledTableCell>\r\n                                   \r\n//                                 </TableRow>\r\n//                             </TableHead>\r\n//                             <TableBody>\r\n//                             {data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => {\r\n//                                     return (\r\n//                                         <StyledTableRow hover role=\"checkbox\">\r\n//                                             <StyledTableCell >\r\n//                                                 {item[0]}\r\n\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[1]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[2]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[3]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[4]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[5]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[6]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[7]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[8]}\r\n//                                             </StyledTableCell >\r\n//                                             <StyledTableCell align=\"right\">\r\n//                                                 {item[9]}\r\n//                                             </StyledTableCell >\r\n                                        \r\n\r\n//                                         </StyledTableRow>\r\n//                                     )\r\n//                                 })\r\n\r\n//                                 }\r\n//                             </TableBody>\r\n//                         </Table>\r\n//                     </TableContainer>\r\n//                     <TablePagination\r\n//                         rowsPerPageOptions={[10, 25, 100]}\r\n//                         component=\"div\"\r\n//                         count={data.data.length}\r\n//                         rowsPerPage={rowsPerPage}\r\n//                         page={page}\r\n//                         onChangePage={handleChangePage}\r\n//                         onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//                     /> \r\n//                 </paper>\r\n//             </div>\r\n//         </div>\r\n\r\n//     )\r\n// };\r\n// export default TestCSV;\r\n"]},"metadata":{},"sourceType":"module"}