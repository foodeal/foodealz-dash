{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\components\\\\Cards\\\\ProfileCard.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  content: {\n    paddingBottom: theme.spacing(1) * 2\n  },\n  avatar: {\n    width: '100%',\n    height: '100%',\n    maxWidth: 105,\n    marginBottom: theme.spacing(1) * 2\n  }\n}));\n\nconst ProfileCard = ({\n  name,\n  image,\n  location,\n  stats\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"text-xs-center\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      className: classNames(classes.content, 'px-0'),\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        alignItems: 'center',\n        direction: 'row',\n        justify: 'space-around',\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Send message\",\n            children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: name,\n            src: image,\n            className: classes.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Call\",\n            children: /*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        alignItems: 'center',\n        direction: 'row',\n        justify: 'space-between',\n        children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: \"text-xs-center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: stat.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: stat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfileCard;\nProfileCard.propTypes = {\n  name: PropTypes.string,\n  image: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    value: PropTypes.number\n  })).isRequired\n};\nexport default ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/components/Cards/ProfileCard.js"],"names":["Avatar","Card","CardContent","Divider","EmailIcon","Grid","IconButton","PhoneIcon","PropTypes","React","Typography","classNames","makeStyles","useStyles","theme","content","paddingBottom","spacing","avatar","width","height","maxWidth","marginBottom","ProfileCard","name","image","location","stats","classes","map","stat","index","value","title","propTypes","string","arrayOf","shape","number","isRequired"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,IAAmB;AAD3B,GAD4B;AAIrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE,MAFF;AAGNC,IAAAA,QAAQ,EAAE,GAHJ;AAINC,IAAAA,YAAY,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,IAAmB;AAJ3B;AAJ6B,CAAL,CAAN,CAA5B;;AAYA,MAAMM,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAsC;AAAA;;AACxD,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEF,UAAU,CAACiB,OAAO,CAACb,OAAT,EAAkB,MAAlB,CAAlC;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAGE,QAAA,UAAU,EAAE,QAHd;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,OAAO,EAAE,cALX;AAAA,gCAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,0BAAW,cAAvB;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAES,IAAb;AAAmB,YAAA,GAAG,EAAEC,KAAxB;AAA+B,YAAA,SAAS,EAAEG,OAAO,CAACV;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,0BAAW,MAAvB;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA,kBACGM;AADH;AAAA;AAAA;AAAA;AAAA,cAtBF,eAyBE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAAA,kBAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YA5BF,eA6BE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEE,OAAO,CAACb,OAAhC;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAGE,QAAA,UAAU,EAAE,QAHd;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,OAAO,EAAE,eALX;AAAA,kBAOGY,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,MAAb;AAAc,UAAA,SAAS,EAAC,gBAAxB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,sBAA0BD,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA,sBAA+BF,IAAI,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAA8CF,KAA9C;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAlDD;;GAAMR,W;UACYV,S;;;KADZU,W;AAoDNA,WAAW,CAACW,SAAZ,GAAwB;AACtBV,EAAAA,IAAI,EAAEhB,SAAS,CAAC2B,MADM;AAEtBV,EAAAA,KAAK,EAAEjB,SAAS,CAAC2B,MAFK;AAGtBT,EAAAA,QAAQ,EAAElB,SAAS,CAAC2B,MAHE;AAItBR,EAAAA,KAAK,EAAEnB,SAAS,CAAC4B,OAAV,CACL5B,SAAS,CAAC6B,KAAV,CAAgB;AACdJ,IAAAA,KAAK,EAAEzB,SAAS,CAAC2B,MADH;AAEdH,IAAAA,KAAK,EAAExB,SAAS,CAAC8B;AAFH,GAAhB,CADK,EAKLC;AAToB,CAAxB;AAYA,eAAehB,WAAf","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    paddingBottom: theme.spacing(1) * 2\n  },\n  avatar: {\n    width: '100%',\n    height: '100%',\n    maxWidth: 105,\n    marginBottom: theme.spacing(1) * 2\n  }\n}));\n\nconst ProfileCard = ({ name, image, location, stats }) => {\n  const classes = useStyles();\n  return (\n    <Card className=\"text-xs-center\">\n      <CardContent className={classNames(classes.content, 'px-0')}>\n        <Grid\n          container\n          spacing={0}\n          alignItems={'center'}\n          direction={'row'}\n          justify={'space-around'}\n        >\n          <Grid item>\n            <IconButton aria-label=\"Send message\">\n              <EmailIcon />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <Avatar alt={name} src={image} className={classes.avatar} />\n          </Grid>\n          <Grid item>\n            <IconButton aria-label=\"Call\">\n              <PhoneIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Typography variant=\"h6\" gutterBottom>\n          {name}\n        </Typography>\n        <Typography variant=\"caption\">{location}</Typography>\n      </CardContent>\n      <Divider />\n      <CardContent className={classes.content}>\n        <Grid\n          container\n          spacing={0}\n          alignItems={'center'}\n          direction={'row'}\n          justify={'space-between'}\n        >\n          {stats.map((stat, index) => (\n            <Grid item xs className=\"text-xs-center\" key={index}>\n              <Typography variant=\"h6\">{stat.value}</Typography>\n              <Typography variant=\"caption\">{stat.title}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nProfileCard.propTypes = {\n  name: PropTypes.string,\n  image: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.number\n    })\n  ).isRequired\n};\n\nexport default ProfileCard;\n"]},"metadata":{},"sourceType":"module"}