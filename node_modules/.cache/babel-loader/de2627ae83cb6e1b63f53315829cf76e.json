{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\utils\\\\demos\\\\selection-controls\\\\CustomizedSwitches.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  colorSwitchBase: {\n    color: purple[300],\n    '&$colorChecked': {\n      color: purple[500],\n      '& + $colorBar': {\n        backgroundColor: purple[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  iOSSwitchBase: {\n    '&$iOSChecked': {\n      color: theme.palette.common.white,\n      '& + $iOSBar': {\n        backgroundColor: '#52d869'\n      }\n    },\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n      easing: theme.transitions.easing.sharp\n    })\n  },\n  iOSChecked: {\n    transform: 'translateX(15px)',\n    '& + $iOSBar': {\n      opacity: 1,\n      border: 'none'\n    }\n  },\n  iOSBar: {\n    borderRadius: 13,\n    width: 42,\n    height: 26,\n    marginTop: -13,\n    marginLeft: -21,\n    border: 'solid 1px',\n    borderColor: theme.palette.grey[400],\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  iOSIcon: {\n    width: 24,\n    height: 24\n  },\n  iOSIconChecked: {\n    boxShadow: theme.shadows[1]\n  }\n});\n\nclass CustomizedSwitches extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      checkedB: true\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: this.state.checkedA,\n          onChange: this.handleChange('checkedA'),\n          value: \"checkedA\",\n          classes: {\n            switchBase: classes.colorSwitchBase,\n            checked: classes.colorChecked,\n            bar: classes.colorBar\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this),\n        label: \"Custom color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          classes: {\n            switchBase: classes.iOSSwitchBase,\n            bar: classes.iOSBar,\n            icon: classes.iOSIcon,\n            iconChecked: classes.iOSIconChecked,\n            checked: classes.iOSChecked\n          },\n          disableRipple: true,\n          checked: this.state.checkedB,\n          onChange: this.handleChange('checkedB'),\n          value: \"checkedB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this),\n        label: \"iOS style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedSwitches);","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/utils/demos/selection-controls/CustomizedSwitches.js"],"names":["React","PropTypes","withStyles","purple","FormGroup","FormControlLabel","Switch","styles","theme","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","iOSSwitchBase","palette","common","white","transition","transitions","create","duration","shortest","easing","sharp","iOSChecked","transform","opacity","border","iOSBar","borderRadius","width","height","marginTop","marginLeft","borderColor","grey","iOSIcon","iOSIconChecked","boxShadow","shadows","CustomizedSwitches","Component","state","checkedA","checkedB","handleChange","name","event","setState","target","checked","render","classes","props","switchBase","bar","icon","iconChecked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  colorSwitchBase: {\n    color: purple[300],\n    '&$colorChecked': {\n      color: purple[500],\n      '& + $colorBar': {\n        backgroundColor: purple[500],\n      },\n    },\n  },\n  colorBar: {},\n  colorChecked: {},\n  iOSSwitchBase: {\n    '&$iOSChecked': {\n      color: theme.palette.common.white,\n      '& + $iOSBar': {\n        backgroundColor: '#52d869',\n      },\n    },\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  iOSChecked: {\n    transform: 'translateX(15px)',\n    '& + $iOSBar': {\n      opacity: 1,\n      border: 'none',\n    },\n  },\n  iOSBar: {\n    borderRadius: 13,\n    width: 42,\n    height: 26,\n    marginTop: -13,\n    marginLeft: -21,\n    border: 'solid 1px',\n    borderColor: theme.palette.grey[400],\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  iOSIcon: {\n    width: 24,\n    height: 24,\n  },\n  iOSIconChecked: {\n    boxShadow: theme.shadows[1],\n  },\n});\n\nclass CustomizedSwitches extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n              classes={{\n                switchBase: classes.colorSwitchBase,\n                checked: classes.colorChecked,\n                bar: classes.colorBar,\n              }}\n            />\n          }\n          label=\"Custom color\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                switchBase: classes.iOSSwitchBase,\n                bar: classes.iOSBar,\n                icon: classes.iOSIcon,\n                iconChecked: classes.iOSIconChecked,\n                checked: classes.iOSChecked,\n              }}\n              disableRipple\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n            />\n          }\n          label=\"iOS style\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedSwitches);\n"]},"metadata":{},"sourceType":"module"}