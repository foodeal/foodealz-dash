{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\TestValide\\\\TestValide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nconst Title1 = {\n  fontSize: '30px',\n  color: '#008037',\n  fontWeight: 'bold',\n  marginLeft: '480px',\n  justifyContent: 'center'\n};\nconst Field = {\n  marginLeft: '100px',\n  width: '300px',\n  marginTop: '25px',\n  padding: '15px'\n};\nconst buttonstyle = {\n  marginLeft: '530px',\n  marginTop: '50px',\n  backgroundColor: '#008037',\n  width: '120px',\n  borderRadius: '5px'\n};\nlet schema = yup.object().shape({\n  username: yup.string().required('please enter username'),\n  email: yup.string().email().required('email invallid'),\n  password: yup.string().min(4).max(8).required('password nvalid') // starting_date: yup.date().required('date invalid').nullable(),\n  // expired_date: yup.date().required('date invalid').nullable(),\n  // expired_hour: yup.string().required('hour invalid'),\n\n});\n\nconst TestValide = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    error\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const useStyles = makeStyles(theme => ({\n    ligne: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  }));\n\n  const submitForm = data => {\n    console.log('data input are :', data);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitForm),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ligne,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"enter total quantity\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ligne,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"enter quantity sold\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ligne,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '15px',\n            color: \"#008037\",\n            fontWeight: \"bold\",\n            marginTop: '50px'\n          },\n          children: \"password :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"enter quantity sold\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 1\n  }, this);\n};\n\n_s(TestValide, \"tUlbuyLi/nlgGR0+xyInE4e72b8=\", true, function () {\n  return [useForm];\n});\n\n_c = TestValide;\nexport default TestValide;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestValide\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/TestValide/TestValide.js"],"names":["React","useState","useEffect","TextField","Button","useForm","yupResolver","yup","withStyles","makeStyles","Title1","fontSize","color","fontWeight","marginLeft","justifyContent","Field","width","marginTop","padding","buttonstyle","backgroundColor","borderRadius","schema","object","shape","username","string","required","email","password","min","max","TestValide","register","handleSubmit","error","resolver","useStyles","theme","ligne","display","flexDirection","formControl","margin","spacing","minWidth","selectEmpty","container","flexWrap","textField","marginRight","submitForm","data","console","log","classes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport {useForm} from 'react-hook-form';\r\nimport {yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup' ;\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst Title1 = {\r\n    fontSize: '30px',\r\n    color: '#008037',\r\n    fontWeight: 'bold',\r\n    marginLeft: '480px',\r\n    justifyContent: 'center'\r\n  }\r\n  const Field = {\r\n    marginLeft: '100px',\r\n    width: '300px',\r\n    marginTop: '25px',\r\n    padding: '15px',\r\n  \r\n  \r\n  }\r\n  const buttonstyle = {\r\n    marginLeft: '530px',\r\n    marginTop: '50px',\r\n    backgroundColor: '#008037',\r\n    width: '120px',\r\n    borderRadius: '5px'\r\n  \r\n  }\r\n  \r\n  let schema = yup.object().shape({\r\n    username: yup.string().required( 'please enter username'),\r\n    email: yup.string().email().required('email invallid'),\r\n    password: yup.string().min(4).max(8).required('password nvalid'),\r\n    // starting_date: yup.date().required('date invalid').nullable(),\r\n    // expired_date: yup.date().required('date invalid').nullable(),\r\n   \r\n    // expired_hour: yup.string().required('hour invalid'),\r\n   \r\n  });\r\n\r\n \r\n\r\n  const TestValide = () =>{\r\n\r\n    const {register, handleSubmit, error} = useForm({\r\n        resolver: yupResolver(schema),\r\n      });\r\n\r\n      const useStyles = makeStyles((theme) => ({\r\n        ligne: {\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n        },\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 200,\r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        container: {\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n          marginLeft: theme.spacing(1),\r\n          marginRight: theme.spacing(1),\r\n          width: 200,\r\n        },\r\n      }));\r\n\r\n      const submitForm = (data) => {\r\n        console.log('data input are :', data);\r\n      };\r\n      const classes = useStyles();\r\n      return(\r\n<div>\r\n\r\n    <h2>Sign In</h2>\r\n    <form onSubmit={handleSubmit(submitForm)}>\r\n        <div className={classes.ligne}>\r\n        <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>username:</p>\r\n        <input type=\"text\" name=\"username\" placeholder=\"enter total quantity\"  ref={register}/>\r\n        {/* <TextField style={{ marginLeft: '20px', width: '300px', marginTop: '25px', padding: '15px' }}\r\n          name=\"quantityy\"  onChange={e => qtchange(e.target.value)} variant=\"filled\"  ref={register} /> */}\r\n        {/* <p>{error.username?.message}</p> */}\r\n      </div>\r\n      <div className={classes.ligne}>\r\n        <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>email :</p>\r\n        <input type=\"text\" name=\"email\" placeholder=\"enter quantity sold\"  ref={register}/>\r\n        {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n          name=\"quantity_Sold\"  onChange={e => offresoldchange(e.target.value)} variant=\"filled\"  ref={register} /> */}\r\n          {/* <p>{error.email?.message}</p> */}\r\n      </div>\r\n      <div className={classes.ligne}>\r\n        <p style={{ fontSize: '15px', color: \"#008037\", fontWeight: \"bold\", marginTop: '50px' }}>password :</p>\r\n        <input type=\"text\" name=\"password\" placeholder=\"enter quantity sold\"  ref={register}/>\r\n        {/* <TextField style={{ width: '300px', marginTop: '25px', padding: '15px' }}\r\n          name=\"quantity_Sold\"  onChange={e => offresoldchange(e.target.value)} variant=\"filled\"  ref={register} /> */}\r\n          {/* <p>{error.password?.message}</p> */}\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n      );\r\n  }\r\n  export default TestValide;"]},"metadata":{},"sourceType":"module"}