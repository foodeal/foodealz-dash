{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\Maps\\\\UsersMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\n\nimport L from 'leaflet';\nimport \"leaflet.heat\"; // import HeatmapOverlay from 'react-map-gl-heatmap-overlay';\n\nconst UsersMap = () => {\n  _s();\n\n  useEffect(() => {\n    var map = L.map(\"map\").setView([-37.87, 175.475], 12);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    const addressPoints = [{\n      lat: 33.886917,\n      lng: 9.537499,\n      val: 5\n    }, {\n      lat: 34.886917,\n      lng: 10.537499,\n      val: 2\n    }, {\n      lat: 35.886917,\n      lng: 11.537499,\n      val: 1\n    }, {\n      lat: 36.886917,\n      lng: 12.537499,\n      val: 6\n    }, {\n      lat: 37.886917,\n      lng: 13.537499,\n      val: 3\n    }];\n    const points = addressPoints ? addressPoints.map(p => {\n      return [p[\"lat\"], p[\"lng\"]];\n    }) : [];\n    console.log(points);\n    L.heatLayer(points).addTo(map);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}; // const [data, setData] = React.useState({\n//     error: '',\n//     data: [],\n//     cfg: {\n//         \"radius\":2,\n//         \"maxOpacity\": 8,\n//         \"scaleRadius\": true,\n//         \"useLocalExtrema\": true,\n//         latField: 'lat',\n//         lngField:'lng',\n//         valueField: \"val\"\n//     },\n//     layers: [],\n//     baseLayer: \"\",\n//     heatmapLayer: \"\",\n//     testData: {\n//         max: 8,\n//         userData: [\n//             { lat: 33.886917, lng: 9.537499, val: 5 },\n//             { lat: 34.886917, lng: 10.537499, val: 2 },\n//             { lat: 35.886917, lng: 11.537499, val: 1 },\n//             { lat: 36.886917, lng: 12.537499, val: 6 },\n//             { lat: 37.886917, lng: 13.537499, val: 3 },\n//         ]\n//     }\n// });\n// const Layer = () => {\n//     setData({\n//         ...data,\n//         baseLayer : L.tileLayer(\n//             'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//             attribution: '...',\n//             maxZoom: 18\n//         }\n//         )\n//       })\n// };\n// const heatLayer =() => {\n//     setData({\n//         ...data,\n//         heatmapLayer: new HeatmapOverlay(data.cfg),\n//         layers:[data.baseLayer,heatmapLayer]\n//       });\n// }\n// useEffect(() => {\n//     Layer(),\n//     heatLayer()\n//   }, [])\n//   const test =() => {\n//       data.heatmapLayer.setData(data.testData.userData)\n//   };\n// const Map = () => {\n//     // const [selectedPartner, setSelectedPartner] = useState(null);\n//     return (\n//         <GoogleMap defaultZoom={10} defaultCenter={{ lat: 33.886917, lng: 9.537499 }} layers={data.layers} >\n//             {Layer()}\n//             {test()}\n//             </GoogleMap>\n//     );\n// }\n// const WrappedMap = withScriptjs(withGoogleMap(Map));\n// return (\n//     <div style={{ width: '100vw', height: '100vh' }}>\n//         <WrappedMap\n//             googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`}`}\n//             loadingElement={<div style={{ height: \"100%\" }} />}\n//             containerElement={<div style={{ height: \"100%\" }} />}\n//             mapElement={<div style={{ height: \"100%\" }} />}\n//         />\n//     </div>\n// )\n\n\n_s(UsersMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersMap;\nexport default UsersMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersMap\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/Maps/UsersMap.js"],"names":["React","useState","useEffect","L","UsersMap","map","setView","tileLayer","attribution","addTo","addressPoints","lat","lng","val","points","p","console","log","heatLayer","height"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,cAAP,C,CACA;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtBF,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIG,GAAG,GAAGF,CAAC,CAACE,GAAF,CAAM,KAAN,EAAaC,OAAb,CAAqB,CAAC,CAAC,KAAF,EAAS,OAAT,CAArB,EAAwC,EAAxC,CAAV;AAEAH,IAAAA,CAAC,CAACI,SAAF,CAAY,oDAAZ,EAAkE;AACjEC,MAAAA,WAAW,EACV;AAFgE,KAAlE,EAGGC,KAHH,CAGSJ,GAHT;AAIA,UAAMK,aAAa,GAAG,CACT;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,QAAvB;AAAiCC,MAAAA,GAAG,EAAE;AAAtC,KADS,EAET;AAAEF,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,SAAvB;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAFS,EAGT;AAAEF,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,SAAvB;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAHS,EAIT;AAAEF,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,SAAvB;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAJS,EAKT;AAAEF,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,SAAvB;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KALS,CAAtB;AAOA,UAAMC,MAAM,GAAGJ,aAAa,GACzBA,aAAa,CAACL,GAAd,CAAmBU,CAAD,IAAO;AAC1B,aAAO,CAACA,CAAC,CAAC,KAAD,CAAF,EAAWA,CAAC,CAAC,KAAD,CAAZ,CAAP;AACA,KAFC,CADyB,GAIzB,EAJH;AAKCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEDX,IAAAA,CAAC,CAACe,SAAF,CAAYJ,MAAZ,EAAoBL,KAApB,CAA0BJ,GAA1B;AACA,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBAAO;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE;AAAV;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CA1BD,C,CA4BI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;GA3HEf,Q;;KAAAA,Q;AA8HN,eAAeA,QAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\r\nimport L from 'leaflet';\r\nimport \"leaflet.heat\";\r\n// import HeatmapOverlay from 'react-map-gl-heatmap-overlay';\r\n\r\n\r\n\r\n\r\n\r\nconst UsersMap = () => {\r\n\tuseEffect(() => {\r\n\t\tvar map = L.map(\"map\").setView([-37.87, 175.475], 12);\r\n\r\n\t\tL.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n\t\t\tattribution:\r\n\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t}).addTo(map);\r\n\t\tconst addressPoints = [\r\n\t\t\t            { lat: 33.886917, lng: 9.537499, val: 5 },\r\n\t\t\t            { lat: 34.886917, lng: 10.537499, val: 2 },\r\n\t\t\t            { lat: 35.886917, lng: 11.537499, val: 1 },\r\n\t\t\t            { lat: 36.886917, lng: 12.537499, val: 6 },\r\n\t\t\t            { lat: 37.886917, lng: 13.537499, val: 3 },\r\n\t\t\t        ];\r\n\t\tconst points = addressPoints\r\n\t\t\t? addressPoints.map((p) => {\r\n\t\t\t\treturn [p[\"lat\"], p[\"lng\"]];\r\n\t\t\t})\r\n\t\t\t: [];\r\n\t\t\tconsole.log(points);\r\n\r\n\t\tL.heatLayer(points).addTo(map);\r\n\t}, []);\r\n\r\n\treturn <div id=\"map\" style={{ height: \"100vh\" }}></div>;\r\n}\r\n\r\n    // const [data, setData] = React.useState({\r\n\r\n    //     error: '',\r\n    //     data: [],\r\n    //     cfg: {\r\n    //         \"radius\":2,\r\n    //         \"maxOpacity\": 8,\r\n    //         \"scaleRadius\": true,\r\n    //         \"useLocalExtrema\": true,\r\n    //         latField: 'lat',\r\n    //         lngField:'lng',\r\n    //         valueField: \"val\"\r\n    //     },\r\n    //     layers: [],\r\n    //     baseLayer: \"\",\r\n    //     heatmapLayer: \"\",\r\n    //     testData: {\r\n    //         max: 8,\r\n    //         userData: [\r\n    //             { lat: 33.886917, lng: 9.537499, val: 5 },\r\n    //             { lat: 34.886917, lng: 10.537499, val: 2 },\r\n    //             { lat: 35.886917, lng: 11.537499, val: 1 },\r\n    //             { lat: 36.886917, lng: 12.537499, val: 6 },\r\n    //             { lat: 37.886917, lng: 13.537499, val: 3 },\r\n    //         ]\r\n\r\n    //     }\r\n\r\n\r\n\r\n\r\n\r\n    // });\r\n\r\n    // const Layer = () => {\r\n    //     setData({\r\n    //         ...data,\r\n    //         baseLayer : L.tileLayer(\r\n    //             'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    //             attribution: '...',\r\n    //             maxZoom: 18\r\n    //         }\r\n    //         )\r\n\r\n    //       })\r\n\r\n    // };\r\n\r\n    // const heatLayer =() => {\r\n\r\n    //     setData({\r\n    //         ...data,\r\n    //         heatmapLayer: new HeatmapOverlay(data.cfg),\r\n    //         layers:[data.baseLayer,heatmapLayer]\r\n\r\n    //       });\r\n\r\n    // }\r\n    // useEffect(() => {\r\n    //     Layer(),\r\n    //     heatLayer()\r\n    //   }, [])\r\n\r\n    //   const test =() => {\r\n    //       data.heatmapLayer.setData(data.testData.userData)\r\n    //   };\r\n\r\n    // const Map = () => {\r\n\r\n    //     // const [selectedPartner, setSelectedPartner] = useState(null);\r\n\r\n    //     return (\r\n\r\n    //         <GoogleMap defaultZoom={10} defaultCenter={{ lat: 33.886917, lng: 9.537499 }} layers={data.layers} >\r\n    //             {Layer()}\r\n    //             {test()}\r\n    //             </GoogleMap>\r\n\r\n\r\n    //     );\r\n    // }\r\n\r\n    // const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n    // return (\r\n    //     <div style={{ width: '100vw', height: '100vh' }}>\r\n    //         <WrappedMap\r\n    //             googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${`AIzaSyD1lN2ArTGGjhdZrR1JI5bXj58JU9V5iUE`}`}\r\n    //             loadingElement={<div style={{ height: \"100%\" }} />}\r\n    //             containerElement={<div style={{ height: \"100%\" }} />}\r\n    //             mapElement={<div style={{ height: \"100%\" }} />}\r\n    //         />\r\n\r\n    //     </div>\r\n\r\n    // )\r\n\r\n\r\nexport default UsersMap;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}