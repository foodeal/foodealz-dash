{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HorchiAbla\\\\Desktop\\\\dashboard1\\\\src\\\\pages\\\\testCSV\\\\TestCSV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { parse } from \"papaparse\";\n\nconst TestCSV = () => {\n  _s();\n\n  const [highlighted, setHighlighted] = React.useState(false);\n  const [offres, setOffres] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Import offers from CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 my-2 mx-w-md border-2`,\n      onDragOver: e => {\n        e.preventDefault();\n      },\n      onDrop: e => {\n        let result = \"\";\n        e.preventDefault();\n        console.log(e.dataTransfer.files);\n        Array.from(e.dataTransfer.files).filter(files => files.type === \"application/vnd.ms-excel\").forEach(async file => {\n          const text = await file.text();\n          result = parse(text);\n          console.log(result);\n        });\n      },\n      children: \" DROP HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestCSV, \"TIGzM71y3LAZkK2HecBNr26km78=\");\n\n_c = TestCSV;\nexport default TestCSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCSV\");","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/src/pages/testCSV/TestCSV.js"],"names":["React","useState","parse","TestCSV","highlighted","setHighlighted","offres","setOffres","e","preventDefault","result","console","log","dataTransfer","files","Array","from","filter","type","forEach","file","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,KAAT,QAAsB,WAAtB;;AAEA,MAAMC,OAAO,GAAE,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAA+BL,KAAK,CAACC,QAAN,CAAe,KAAf,CAArC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAqBP,KAAK,CAACC,QAAN,CAAe,EAAf,CAA3B;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACC,MAAA,SAAS,EAAG,2BADb;AAIC,MAAA,UAAU,EAAGO,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AAEH,OAPF;AAQC,MAAA,MAAM,EAAGD,CAAD,IAAO;AACX,YAAIE,MAAM,GAAC,EAAX;AACDF,QAAAA,CAAC,CAACC,cAAF;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACK,YAAF,CAAeC,KAA3B;AACAC,QAAAA,KAAK,CAACC,IAAN,CAAWR,CAAC,CAACK,YAAF,CAAeC,KAA1B,EAAiCG,MAAjC,CACKH,KAAD,IAAWA,KAAK,CAACI,IAAN,KAAe,0BAD9B,EAEEC,OAFF,CAEU,MAAMC,IAAN,IAAe;AACrB,gBAAMC,IAAI,GAAG,MAAMD,IAAI,CAACC,IAAL,EAAnB;AACAX,UAAAA,MAAM,GAAER,KAAK,CAACmB,IAAD,CAAb;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEH,SAPD;AAQF,OApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAtCD;;GAAMP,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport { parse } from \"papaparse\";\r\n\r\nconst TestCSV =() => {\r\n    const [highlighted, setHighlighted]= React.useState(false);\r\n    const [offres, setOffres]= React.useState([]);\r\n\r\n    return (\r\n        <div>\r\n            <h3 > Import offers from CSV</h3>\r\n            <div\r\n             className={`p-6 my-2 mx-w-md border-2`}\r\n            \r\n\r\n             onDragOver={(e) => {\r\n                 e.preventDefault();\r\n\r\n             }}\r\n             onDrop={(e) => {\r\n                 let result=\"\";\r\n                e.preventDefault();\r\n                console.log(e.dataTransfer.files);\r\n                Array.from(e.dataTransfer.files).filter(\r\n                    (files) => files.type === \"application/vnd.ms-excel\"\r\n                ).forEach(async(file) => {\r\n                    const text = await file.text();\r\n                    result= parse(text);\r\n                    console.log(result);\r\n                       \r\n                });\r\n             }}\r\n            > DROP HERE</div>\r\n            {/* <ul>\r\n                {offres.map(offre => <li key={offre.id}>\r\n                    <strong>{offre.id}</strong>: {offre.nom} :{offre.image}: {offre.PriceBefore}\r\n\r\n\r\n                </li>)}\r\n            </ul> */}\r\n        </div>\r\n    )\r\n};\r\nexport default TestCSV;\r\n"]},"metadata":{},"sourceType":"module"}