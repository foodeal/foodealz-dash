{"ast":null,"code":"'use strict';\n\nvar HeatmapShader = require('./heatmap-shader');\n\nvar fs = require('fs');\n\nvar path = require('path');\n/* eslint-disable max-len */\n\n\nvar vertexShaderBlit = fs.readFileSync(path.join(__dirname, './vertex-shader-blit.glsl'), 'utf-8');\nvar fragmentShaderBlit = fs.readFileSync(path.join(__dirname, './fragment-shader-blit.glsl'), 'utf-8');\n/* eslint-enable max-len */\n\nvar HeatmapNode = require('./heatmap-node');\n\nfunction HeatmapHeights(heatmap, gl, width, height) {\n  var i, _i, _ref;\n\n  this.heatmap = heatmap;\n  this.gl = gl;\n  this.width = width;\n  this.height = height;\n  this.shader = new HeatmapShader(this.gl, {\n    vertex: 'attribute vec4 position, intensity;\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nuniform vec2 viewport;\\n\\nvoid main(){\\n    dim = abs(position.zw);\\n    off = position.zw;\\n    vec2 pos = position.xy + position.zw;\\n    vIntensity = intensity.x;\\n    gl_Position = vec4((pos/viewport)*2.0-1.0, 0.0, 1.0);\\n}',\n    fragment: '#ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp int;\\n    precision highp float;\\n#else\\n    precision mediump int;\\n    precision mediump float;\\n#endif\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nvoid main(){\\n    float falloff = (1.0 - smoothstep(0.0, 1.0, length(off/dim)));\\n    float intensity = falloff*vIntensity;\\n    gl_FragColor = vec4(intensity);\\n}'\n  });\n  this.clampShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform float low, high;\\nvoid main(){\\n    gl_FragColor = vec4(clamp(texture2D(source, texcoord).rgb, low, high), 1.0);\\n}'\n  });\n  this.multiplyShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform float value;\\nvoid main(){\\n    gl_FragColor = vec4(texture2D(source, texcoord).rgb*value, 1.0);\\n}'\n  });\n  this.blurShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform vec2 viewport;\\nvoid main(){\\n    vec4 result = vec4(0.0);\\n    for(int x=-1; x<=1; x++){\\n        for(int y=-1; y<=1; y++){\\n            vec2 off = vec2(x,y)/viewport;\\n            //float factor = 1.0 - smoothstep(0.0, 1.5, length(off));\\n            float factor = 1.0;\\n            result += vec4(texture2D(source, texcoord+off).rgb*factor, factor);\\n        }\\n    }\\n    gl_FragColor = vec4(result.rgb/result.w, 1.0);\\n}'\n  });\n  this.nodeBack = new HeatmapNode(this.gl, this.width, this.height);\n  this.nodeFront = new HeatmapNode(this.gl, this.width, this.height);\n  this.vertexBuffer = this.gl.createBuffer();\n  this.vertexSize = 8;\n  this.maxPointCount = 1024 * 10;\n  this.vertexBufferData = new Float32Array(this.maxPointCount * this.vertexSize * 6);\n  this.vertexBufferViews = [];\n\n  for (i = _i = 0, _ref = this.maxPointCount; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n    this.vertexBufferViews.push(new Float32Array(this.vertexBufferData.buffer, 0, i * this.vertexSize * 6));\n  }\n\n  this.bufferIndex = 0;\n  this.pointCount = 0;\n}\n\nHeatmapHeights.prototype.resize = function (width, height) {\n  this.width = width;\n  this.height = height;\n  this.nodeBack.resize(this.width, this.height);\n  return this.nodeFront.resize(this.width, this.height);\n};\n\nHeatmapHeights.prototype.update = function () {\n  var intensityLoc, positionLoc;\n\n  if (this.pointCount > 0) {\n    this.gl.enable(this.gl.BLEND);\n    this.nodeFront.use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexBufferViews[this.pointCount], this.gl.STREAM_DRAW);\n    positionLoc = this.shader.attribLocation('position');\n    intensityLoc = this.shader.attribLocation('intensity');\n    this.gl.enableVertexAttribArray(1);\n    this.gl.vertexAttribPointer(positionLoc, 4, this.gl.FLOAT, false, 8 * 4, 0 * 4);\n    this.gl.vertexAttribPointer(intensityLoc, 4, this.gl.FLOAT, false, 8 * 4, 4 * 4);\n    this.shader.use().vec2('viewport', this.width, this.height);\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, this.pointCount * 6);\n    this.gl.disableVertexAttribArray(1);\n    this.pointCount = 0;\n    this.bufferIndex = 0;\n    this.nodeFront.end();\n    return this.gl.disable(this.gl.BLEND);\n  }\n};\n\nHeatmapHeights.prototype.clear = function () {\n  this.nodeFront.use();\n  this.gl.clearColor(0, 0, 0, 1);\n  this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  return this.nodeFront.end();\n};\n\nHeatmapHeights.prototype.clamp = function (min, max) {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.clampShader.use().int('source', 0).float('low', min).float('high', max);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.multiply = function (value) {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.multiplyShader.use().int('source', 0).float('value', value);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.blur = function () {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.blurShader.use().int('source', 0).vec2('viewport', this.width, this.height);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.swap = function () {\n  var tmp;\n  tmp = this.nodeFront;\n  this.nodeFront = this.nodeBack;\n  return this.nodeBack = tmp;\n};\n\nHeatmapHeights.prototype.addVertex = function (x, y, xs, ys, intensity) {\n  this.vertexBufferData[this.bufferIndex++] = x;\n  this.vertexBufferData[this.bufferIndex++] = y;\n  this.vertexBufferData[this.bufferIndex++] = xs;\n  this.vertexBufferData[this.bufferIndex++] = ys;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  return this.vertexBufferData[this.bufferIndex++] = intensity;\n};\n\nHeatmapHeights.prototype.addPoint = function (x, y, size, intensity) {\n  var s;\n\n  if (size == null) {\n    size = 50;\n  }\n\n  if (intensity == null) {\n    intensity = 0.2;\n  }\n\n  if (this.pointCount >= this.maxPointCount - 1) {\n    this.update();\n  }\n\n  y = this.height - y;\n  s = size / 2;\n  this.addVertex(x, y, -s, -s, intensity);\n  this.addVertex(x, y, +s, -s, intensity);\n  this.addVertex(x, y, -s, +s, intensity);\n  this.addVertex(x, y, -s, +s, intensity);\n  this.addVertex(x, y, +s, -s, intensity);\n  this.addVertex(x, y, +s, +s, intensity);\n  return this.pointCount += 1;\n};\n\nmodule.exports = HeatmapHeights;","map":{"version":3,"sources":["C:/Users/HorchiAbla/Desktop/dashboard1/node_modules/webgl-heatmap/heatmap-heights.js"],"names":["HeatmapShader","require","fs","path","vertexShaderBlit","readFileSync","join","__dirname","fragmentShaderBlit","HeatmapNode","HeatmapHeights","heatmap","gl","width","height","i","_i","_ref","shader","vertex","fragment","clampShader","multiplyShader","blurShader","nodeBack","nodeFront","vertexBuffer","createBuffer","vertexSize","maxPointCount","vertexBufferData","Float32Array","vertexBufferViews","push","buffer","bufferIndex","pointCount","prototype","resize","update","intensityLoc","positionLoc","enable","BLEND","use","bindBuffer","ARRAY_BUFFER","bufferData","STREAM_DRAW","attribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","vec2","drawArrays","TRIANGLES","disableVertexAttribArray","end","disable","clear","clearColor","COLOR_BUFFER_BIT","clamp","min","max","quad","bind","int","float","swap","multiply","value","blur","tmp","addVertex","x","y","xs","ys","intensity","addPoint","size","s","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar HeatmapShader = require('./heatmap-shader');\nvar fs = require('fs');\nvar path = require('path');\n/* eslint-disable max-len */\nvar vertexShaderBlit = fs.readFileSync(path.join(__dirname, './vertex-shader-blit.glsl'), 'utf-8');\nvar fragmentShaderBlit = fs.readFileSync(path.join(__dirname, './fragment-shader-blit.glsl'), 'utf-8');\n/* eslint-enable max-len */\nvar HeatmapNode = require('./heatmap-node');\n\nfunction HeatmapHeights(heatmap, gl, width, height) {\n  var i, _i, _ref;\n  this.heatmap = heatmap;\n  this.gl = gl;\n  this.width = width;\n  this.height = height;\n  this.shader = new HeatmapShader(this.gl, {\n    vertex: 'attribute vec4 position, intensity;\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nuniform vec2 viewport;\\n\\nvoid main(){\\n    dim = abs(position.zw);\\n    off = position.zw;\\n    vec2 pos = position.xy + position.zw;\\n    vIntensity = intensity.x;\\n    gl_Position = vec4((pos/viewport)*2.0-1.0, 0.0, 1.0);\\n}',\n    fragment: '#ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp int;\\n    precision highp float;\\n#else\\n    precision mediump int;\\n    precision mediump float;\\n#endif\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nvoid main(){\\n    float falloff = (1.0 - smoothstep(0.0, 1.0, length(off/dim)));\\n    float intensity = falloff*vIntensity;\\n    gl_FragColor = vec4(intensity);\\n}'\n  });\n  this.clampShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform float low, high;\\nvoid main(){\\n    gl_FragColor = vec4(clamp(texture2D(source, texcoord).rgb, low, high), 1.0);\\n}'\n  });\n  this.multiplyShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform float value;\\nvoid main(){\\n    gl_FragColor = vec4(texture2D(source, texcoord).rgb*value, 1.0);\\n}'\n  });\n  this.blurShader = new HeatmapShader(this.gl, {\n    vertex: vertexShaderBlit,\n    fragment: fragmentShaderBlit + 'uniform vec2 viewport;\\nvoid main(){\\n    vec4 result = vec4(0.0);\\n    for(int x=-1; x<=1; x++){\\n        for(int y=-1; y<=1; y++){\\n            vec2 off = vec2(x,y)/viewport;\\n            //float factor = 1.0 - smoothstep(0.0, 1.5, length(off));\\n            float factor = 1.0;\\n            result += vec4(texture2D(source, texcoord+off).rgb*factor, factor);\\n        }\\n    }\\n    gl_FragColor = vec4(result.rgb/result.w, 1.0);\\n}'\n  });\n  this.nodeBack = new HeatmapNode(this.gl, this.width, this.height);\n  this.nodeFront = new HeatmapNode(this.gl, this.width, this.height);\n  this.vertexBuffer = this.gl.createBuffer();\n  this.vertexSize = 8;\n  this.maxPointCount = 1024 * 10;\n  this.vertexBufferData = new Float32Array(this.maxPointCount * this.vertexSize * 6);\n  this.vertexBufferViews = [];\n  for (i = _i = 0, _ref = this.maxPointCount; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n    this.vertexBufferViews.push(new Float32Array(this.vertexBufferData.buffer, 0, i * this.vertexSize * 6));\n  }\n  this.bufferIndex = 0;\n  this.pointCount = 0;\n}\n\nHeatmapHeights.prototype.resize = function(width, height) {\n  this.width = width;\n  this.height = height;\n  this.nodeBack.resize(this.width, this.height);\n  return this.nodeFront.resize(this.width, this.height);\n};\n\nHeatmapHeights.prototype.update = function() {\n  var intensityLoc, positionLoc;\n  if (this.pointCount > 0) {\n    this.gl.enable(this.gl.BLEND);\n    this.nodeFront.use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexBufferViews[this.pointCount], this.gl.STREAM_DRAW);\n    positionLoc = this.shader.attribLocation('position');\n    intensityLoc = this.shader.attribLocation('intensity');\n    this.gl.enableVertexAttribArray(1);\n    this.gl.vertexAttribPointer(positionLoc, 4, this.gl.FLOAT, false, 8 * 4, 0 * 4);\n    this.gl.vertexAttribPointer(intensityLoc, 4, this.gl.FLOAT, false, 8 * 4, 4 * 4);\n    this.shader.use().vec2('viewport', this.width, this.height);\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, this.pointCount * 6);\n    this.gl.disableVertexAttribArray(1);\n    this.pointCount = 0;\n    this.bufferIndex = 0;\n    this.nodeFront.end();\n    return this.gl.disable(this.gl.BLEND);\n  }\n};\n\nHeatmapHeights.prototype.clear = function() {\n  this.nodeFront.use();\n  this.gl.clearColor(0, 0, 0, 1);\n  this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  return this.nodeFront.end();\n};\n\nHeatmapHeights.prototype.clamp = function(min, max) {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.clampShader.use().int('source', 0).float('low', min).float('high', max);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.multiply = function(value) {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.multiplyShader.use().int('source', 0).float('value', value);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.blur = function() {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n  this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n  this.nodeFront.bind(0);\n  this.nodeBack.use();\n  this.blurShader.use().int('source', 0).vec2('viewport', this.width, this.height);\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  this.nodeBack.end();\n  return this.swap();\n};\n\nHeatmapHeights.prototype.swap = function() {\n  var tmp;\n  tmp = this.nodeFront;\n  this.nodeFront = this.nodeBack;\n  return this.nodeBack = tmp;\n};\n\nHeatmapHeights.prototype.addVertex = function(x, y, xs, ys, intensity) {\n  this.vertexBufferData[this.bufferIndex++] = x;\n  this.vertexBufferData[this.bufferIndex++] = y;\n  this.vertexBufferData[this.bufferIndex++] = xs;\n  this.vertexBufferData[this.bufferIndex++] = ys;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  this.vertexBufferData[this.bufferIndex++] = intensity;\n  return this.vertexBufferData[this.bufferIndex++] = intensity;\n};\n\nHeatmapHeights.prototype.addPoint = function(x, y, size, intensity) {\n  var s;\n  if (size == null) {\n    size = 50;\n  }\n  if (intensity == null) {\n    intensity = 0.2;\n  }\n  if (this.pointCount >= this.maxPointCount - 1) {\n    this.update();\n  }\n  y = this.height - y;\n  s = size / 2;\n  this.addVertex(x, y, -s, -s, intensity);\n  this.addVertex(x, y, +s, -s, intensity);\n  this.addVertex(x, y, -s, +s, intensity);\n  this.addVertex(x, y, -s, +s, intensity);\n  this.addVertex(x, y, +s, -s, intensity);\n  this.addVertex(x, y, +s, +s, intensity);\n  return this.pointCount += 1;\n};\n\nmodule.exports = HeatmapHeights;"]},"metadata":{},"sourceType":"script"}